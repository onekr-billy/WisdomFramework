<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Client.Web</name>
    </assembly>
    <members>
        <member name="T:Client.Web.UrlManager.SiteUrlsIn">
            <summary>
            
            </summary>
        </member>
        <member name="M:Client.Web.UrlManager.SiteUrls.Instance``1">
            <summary>
            Returns a intance of SiteUrls. We first check the cache and if not found
            we parse the SiteUrls.config file and build it.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Web.UrlManager.SiteUrls.GetSiteUrls">
            <summary>
            获取站点URL实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Web.UrlManager.SiteUrls.VisitLog(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            用户行为跟踪地址
            </summary>
            <param name="sourceId"></param>
            <param name="userId"></param>
            <param name="userType"></param>
            <param name="userIp"></param>
            <returns></returns>
        </member>
        <member name="P:Client.Web.UrlManager.SiteUrls.ReWrittenUrls">
            <summary>
            重写URL列表
            </summary>
        </member>
        <member name="P:Client.Web.UrlManager.SiteUrls.Login">
            <summary>
            登录地址
            </summary>
        </member>
        <member name="P:Client.Web.UrlManager.SiteUrls.Logout">
            <summary>
            注销地址
            </summary>
        </member>
        <member name="P:Client.Web.UrlManager.SiteUrls.LoadingImageUrl">
            <summary>
            列表加载过程中的页面
            </summary>
        </member>
        <member name="P:Client.Web.UrlManager.SiteUrlsIn.HeadPortrait">
            <summary>
            用户头像地址
            </summary>
        </member>
        <member name="T:Client.Web.State.DefaultPassport">
            <summary>
            默认Passport客户端代码。
            关于Cookie方面的处理使用CookieHelper，域名及相关Key使用CookieName中的值
            后台数据处理，通过调用ClientConfiguration中的Passport节。
            当前设置为：
            Passportb：UserID＋DateTime.Now＋PassKEY
            PassID：UrlEncode（UserID\rUserName\rUserType）
            Passportc：URLEncode（EncodeBase64（UserID\rUserName\rNickName\rHeadPortrait\rUserType\rRegisterTime\rDateTime.Now））
            Passporta：UrlEncode(EncodeBase64(UserID\rUserName\rNickName\rHeadPortrait\rUserType\rRegisterTime\rDateTime.Now） + "\r" + GeneratePasswordHash(UserID\rUserName\rNickName\rHeadPortrait\rUserType\rRegisterTime\rDateTime.Now） + "\r" + CookieName.PassKEY,"")）
            </summary>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUser(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            获得用户信息
            </summary>
            <param name="userID"></param>
            <param name="username"></param>
            <param name="isOnline">如果此项为True，系统将记录一次用户的登录信息</param>
            <param name="isEditable"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUser(System.Int32,System.Boolean)">
            <summary>
            获得用户ID
            </summary>
            <param name="userId"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUser(System.String,System.Boolean)">
            <summary>
            根据用户名获得用户信息
            </summary>
            <param name="userName"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUser(System.String,System.String,System.Boolean)">
            <summary>
            根据用户名获得用户信息
            </summary>
            <param name="userName"></param>
            <param name="userType"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetAnonymousUser(System.Int32)">
            <summary>
            获得昵名用户信息
            </summary>
            <param name="siteSettingsID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUserIDByName(System.String,System.String)">
            <summary>
            根据用户名获得用户ID
            </summary>
            <param name="username"></param>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUserNameByEmail(System.String)">
            <summary>
            根据用户Email获得用户名
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUsers(System.Int32[],System.Boolean)">
            <summary>
            根据用户ID数组获得用户列表
            </summary>
            <param name="userIds"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUsers(System.String,System.Boolean)">
            <summary>
            根据用户ID字符串获得用户列表
            </summary>
            <param name="userIds"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUsersForName(System.String[],System.Boolean)">
            <summary>
            获得指定用户名称列表的用户清单
            </summary>
            <param name="userNames"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUsersForName(System.String[],System.String,System.Boolean)">
            <summary>
            获得指定用户名称列表的用户清单
            </summary>
            <param name="userNames"></param>
            <param name="userType"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUserInfo(System.Int32,System.Boolean)">
            <summary>
            获得用户的完整信息
            </summary>
            <param name="userId"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUsersInfo(System.Int32[],System.Boolean)">
            <summary>
            获得用户完整信息队列。
            </summary>
            <param name="userIds"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUsersInfo(System.String,System.Boolean)">
            <summary>
            根据多个用户ID组成的字串，获得用户详情的列表。
            </summary>
            <param name="userIds"></param>
            <param name="isCache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.ValidUser(System.String,System.String,System.String,System.String,Framework.Components.UserShortInfo@)">
            <summary>
            验证用户
            </summary>
            <param name="userName"></param>
            <param name="userPassword"></param>
            <param name="userType">用户类型，因为用户可能为九天也可能是合作伙伴的</param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetUserPasswordFormat(System.String,System.String)">
            <summary>
            获得用户密文格式
            </summary>
            <param name="username"></param>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetHeadPortrait(System.Int32)">
            <summary>
            用户头像
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetNickName(System.Int32)">
            <summary>
            获得用户昵称
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.IsUserLogin(System.Int32)">
            <summary>
            判断指定用户是否登陆
            从本地缓存中读取用户信息，检查是否已经登录
            如果本地缓存中没有，则从数据库中提取并检查
            </summary>
            <param name="userID">用户ID</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetPassID(System.Int32,System.String)">
            <summary>
            获得通行证ID
            </summary>
            <param name="sourceId"></param>
            <param name="userIp"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.LoginSign(Framework.Components.UserShortInfo,System.Int32)">
            <summary>
            记录用户信息到 Cookie中
            </summary>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.Logout">
            <summary>
            登出
            </summary>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.GetVisitInfo(System.Int32)">
            <summary>
            记录访问事件
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.VisitLog(System.Int32,System.Int32,System.String)">
            <summary>
            记录用户行为
            </summary>
            <param name="sourceId"></param>
            <param name="userId"></param>
            <param name="userIp"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.VisitLog(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            记录用户行为
            </summary>
            <param name="sourceId"></param>
            <param name="userId"></param>
            <param name="userType"></param>
            <param name="userIp"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.IsAdministrator(System.Int32)">
            <summary>
            是否系统管理员
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.IsPortalAdministrator(System.Int32,System.Int32)">
            <summary>
            是否站点的系统管理员
            </summary>
            <param name="userID"></param>
            <param name="portalID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.IsCustomerAdministrator(System.Int32,System.Int32)">
            <summary>
            是否客户的系统管理员
            </summary>
            <param name="userID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.IsCustomerUser(System.Int32,System.Int32)">
            <summary>
            是否客户的操作员
            </summary>
            <param name="userID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.RemoveCache(System.String)">
            <summary>
            删除用户缓存
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.RemoveCache(System.Int32)">
            <summary>
            删除用户缓存
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.State.DefaultPassport.ValidPayPassword(System.Int32,System.String,System.String)">
            <summary>
            验证支付密码
            </summary>
            <param name="userID"></param>
            <param name="pwd"></param>
            <returns></returns>
        </member>
        <member name="P:Client.Web.State.DefaultPassport.VisitNo">
            <summary>
            访客号
            </summary>
        </member>
        <member name="P:Client.Web.State.DefaultPassport.HeadPortrait">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Client.Web.State.DefaultPassport.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Client.Web.State.DefaultPassport.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Client.Web.State.DefaultPassport.UserID">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Client.Web.State.DefaultPassport.IsLogin">
            <summary>
            是否已经登录
            </summary>
        </member>
        <member name="P:Client.Web.State.DefaultPassport.SiteID">
            <summary>
            站点ID
            </summary>
        </member>
        <member name="T:Client.Web.RealType">
            <summary>
            实时类型
            </summary>
        </member>
        <member name="F:Client.Web.RealType.Online">
            <summary>
            在线型
            </summary>
        </member>
        <member name="F:Client.Web.RealType.Trace">
            <summary>
            跟踪型
            </summary>
        </member>
        <member name="T:Client.Web.GroupItem">
            <summary>
            在线人员的分组项
            </summary>
        </member>
        <member name="M:Client.Web.GroupItem.Push(Client.Web.UserOnlineInfo)">
            <summary>
            将对象插入到最顶端
            </summary>
            <param name="userInfo"></param>
        </member>
        <member name="M:Client.Web.GroupItem.Exists(System.Int32)">
            <summary>
            是否已存在[@userID]
            </summary>
        </member>
        <member name="M:Client.Web.GroupItem.Remove(System.Int32)">
            <summary>
            移除用户[@userID]
            </summary>
        </member>
        <member name="M:Client.Web.GroupItem.Clear">
            <summary>
            清空数据
            </summary>
        </member>
        <member name="M:Client.Web.GroupItem.GetList(System.Int32,Client.Web.UserLinkManager)">
            <summary>
            获取前面的几个用户
            </summary>
            <param name="top">等0时获取全部</param>
        </member>
        <member name="M:Client.Web.GroupItem.Count(Client.Web.UserLinkManager)">
            <summary>
            总人数统计
            </summary>
        </member>
        <member name="T:Client.Web.HtmlEditorProvider">
            <summary>
            HTML Editor
            </summary>
        </member>
        <member name="T:Client.Web.BaseUserControl`1">
            <summary>
            
            </summary>
            <typeparam name="T">重写的用户控件基类</typeparam>
        </member>
        <member name="P:Client.Web.BaseUserControl`1.Page">
            <summary>
            控件对应的页面
            </summary>
        </member>
        <member name="F:Client.Web.RepeaterEx.FilterNode">
            <summary>
            由CreateFilter()的时候赋值
            </summary>
        </member>
        <member name="F:Client.Web.RepeaterEx.MFilterTDNode">
            <summary>
            由CreateMultiFilter()的时候赋值
            </summary>
        </member>
        <member name="M:Client.Web.RepeaterEx.BuildMFilterItem(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="sb"></param>
            <param name="part">1或2</param>
            <param name="index"></param>
        </member>
        <member name="F:Client.Web.RepeaterEx.QueryRootNode">
            <summary>
            查询根节点
            </summary>
        </member>
        <member name="F:Client.Web.RepeaterEx.FilterPartNode">
            <summary>
            过滤部分的节点
            </summary>
        </member>
        <member name="M:Client.Web.RepeaterEx.ParseQueryTemplate">
            <summary>
            解析查询模板
            </summary>
            <param name="xml"></param>
            <param name="writer"></param>
        </member>
        <member name="M:Client.Web.RepeaterEx.CreateTD(System.Text.StringBuilder,System.Xml.XmlNode)">
            <summary>
            创建一个TD
            </summary>
            <param name="sb"></param>
            <param name="n"></param>
        </member>
        <member name="M:Client.Web.RepeaterEx.CreateMultiFilter(System.Text.StringBuilder,System.Xml.XmlNode)">
            <summary>
            创建多条件查询
            </summary>
            <param name="sb"></param>
            <param name="n"></param>
        </member>
        <member name="F:Client.Web.RepeaterEx._FristDataType">
            <summary>
            第一个过滤项的DataType
            </summary>
        </member>
        <member name="M:Client.Web.RepeaterEx.CreateFilter(System.Text.StringBuilder,System.Xml.XmlNode,Client.Web.Filter)">
            <summary>
            创建单条件查询
            </summary>
            <param name="sb"></param>
            <param name="filter"></param>
            <param name="index"></param>
        </member>
        <member name="M:Client.Web.RepeaterEx.CreateSolution(System.Text.StringBuilder,System.Xml.XmlNode,System.String)">
            <summary>
            创建查询方案
            </summary>
            <param name="sb"></param>
            <param name="solution"></param>
            <param name="selectedName"></param>
        </member>
        <member name="M:Client.Web.RepeaterEx.DT(System.Xml.XmlNode)">
            <summary>
            获取dataType属性(默认值为txt)
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.RepeaterEx.P(System.Xml.XmlNode,System.String)">
            <summary>
            获取一个属性
            </summary>
            <param name="n"></param>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="F:Client.Web.RepeaterEx._Solution">
            <summary>
            当前查询方案
            </summary>
        </member>
        <member name="F:Client.Web.RepeaterEx._Filter1">
            <summary>
            当前过滤项
            </summary>
        </member>
        <member name="F:Client.Web.RepeaterEx.HasClearQueryString">
            <summary>
            需要清除的条件
            </summary>
        </member>
        <member name="F:Client.Web.RepeaterEx.PagerFormat">
            <summary>
            分页显示格式
            </summary>
        </member>
        <member name="F:Client.Web.RepeaterEx._SolutionFilter">
            <summary>
            查询方案.过滤代码
            </summary>
        </member>
        <member name="P:Client.Web.RepeaterEx.RecordCount">
            <summary>
            总记录
            </summary>
        </member>
        <member name="P:Client.Web.RepeaterEx.PageSize">
            <summary>
            页长
            </summary>
        </member>
        <member name="P:Client.Web.RepeaterEx.PageIndex">
            <summary>
            起始页索引,从1开始
            </summary>
        </member>
        <member name="P:Client.Web.RepeaterEx.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Client.Web.RepeaterEx.SolutionName">
            <summary>
            查询方案名称
            </summary>
        </member>
        <member name="P:Client.Web.RepeaterEx.SolutionCode">
            <summary>
            查询方案.过滤代码
            </summary>
        </member>
        <member name="P:Client.Web.RepeaterEx.FilterCode">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="T:Client.Web.MPContainer">
            <summary>
            Summary description for MPContainer.
            </summary>
        </member>
        <member name="T:MetaBuilders.WebControls.MasterPages.ContentContainer">
            <summary>
            This control serves two distincts purposes:
            - it marks the location where the Master Page will be inserted into the Page
            - it contains the various Content sections that will be matched to the Master Page's
              Region controls (based on their ID's).
            </summary>
        </member>
        <member name="M:MetaBuilders.WebControls.MasterPages.ContentContainer.#ctor">
            <summary>
            Creates a new instance of the ContentContainer class.
            </summary>
        </member>
        <member name="M:MetaBuilders.WebControls.MasterPages.ContentContainer.AddParsedSubObject(System.Object)">
            <summary>
            Only allows <see cref="T:MetaBuilders.WebControls.MasterPages.Content"/> controls to be added.
            </summary>
        </member>
        <member name="M:MetaBuilders.WebControls.MasterPages.ContentContainer.OnInit(System.EventArgs)">
            <summary>
            Overrides the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)"/> event to load the master page.
            </summary>
        </member>
        <member name="P:MetaBuilders.WebControls.MasterPages.ContentContainer.MasterPageFile">
            <summary>
            The path to MasterPage that specifies the layout used to render the contained content.
            </summary>
        </member>
        <member name="M:Client.Web.MPContainer.OnInit(System.EventArgs)">
            <summary>
            Override Onit to enable setting the MasterPageFile value to a known CS Theme
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Client.Web.MPContainer.themeFolder">
            <summary>
            Folder which contains the master files
            </summary>
        </member>
        <member name="P:Client.Web.MPContainer.ThemeMasterFile">
            <summary>
            Specifies the name of the theme file. Expects to find this file in the Masters directory
            </summary>
        </member>
        <member name="P:Client.Web.MPContainer.ThemePath">
            <summary>
            Full path to the master file
            </summary>
        </member>
        <member name="P:Client.Web.MPContainer.ThemeName">
            <summary>
            Current user selected theme
            </summary>
        </member>
        <member name="T:MetaBuilders.WebControls.MasterPages.Region">
            <summary>
            The control marks a place holder for content in a master page.
            </summary>
        </member>
        <member name="P:MetaBuilders.WebControls.MasterPages.Region.ID">
            <summary>
            Overrides <see cref="P:System.Web.UI.Control.ID"/> to register regions as they are created.
            </summary>
        </member>
        <member name="T:MetaBuilders.WebControls.MasterPages.Content">
            <summary>
            This control contains the content for a particular region
            </summary>
        </member>
        <member name="P:MetaBuilders.WebControls.MasterPages.Content.TemplateSourceDirectory">
            <summary>
            Overrides <see cref="P:System.Web.UI.Control.TemplateSourceDirectory"/>.
            </summary>
        </member>
        <member name="T:MetaBuilders.WebControls.MasterPages.NoBugForm">
            <summary>
            A server form that does not cause a problem by being inside a master page or other naming container.
            </summary>
            <remarks>
            When using this version of masterpages with asp.net 1.1, use this form instead of the standard form element for server forms. This is only required because of a bug in asp.net 1.1's version of __doPostBack.
            </remarks>
        </member>
        <member name="M:MetaBuilders.WebControls.MasterPages.NoBugForm.#ctor">
            <summary>
            Creates a new instance of the NoBugForm class.
            </summary>
        </member>
        <member name="M:MetaBuilders.WebControls.MasterPages.NoBugForm.RenderAttributes(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden to fix the bug.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:MetaBuilders.WebControls.MasterPages.NoBugForm.RenderChildren(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden to fix the bug.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:MetaBuilders.WebControls.MasterPages.NoBugForm.UniqueID">
            <summary>
            Overriden to fix the bug.
            </summary>
        </member>
        <member name="P:Client.Web.MPForm.ClientID">
            <summary>
            重写客户端名称与ID相同
            </summary>
        </member>
        <member name="P:Client.Web.MPForm.Name">
            <summary>
            重写名称与ID相同
            </summary>
        </member>
        <member name="T:Client.Web.BaseDetailPage">
            <summary>
            详情页面的基类
            </summary>
        </member>
        <member name="T:Client.Web.BasePage">
            <summary>
            基础页面,不包括对页面进行重写
            
            为AjaxPage与HtmlPage的基础
            </summary>
        </member>
        <member name="M:Client.Web.BasePage.GetQueryString(System.String)">
            <summary>
            获得指定Url参数的值
            </summary>
            <param name="strName">Url参数</param>
            <returns>Url参数的值</returns>
        </member>
        <member name="M:Client.Web.BasePage.GetFormString(System.String)">
            <summary>
            获得指定表单参数的值
            </summary>
            <param name="strName">表单参数</param>
            <returns>表单参数的值</returns>
        </member>
        <member name="M:Client.Web.BasePage.GetString(System.String)">
            <summary>
            获得Url或表单参数的值, 先判断Url参数是否为空字符串, 如为True则返回表单参数的值
            </summary>
            <param name="strName">参数</param>
            <returns>Url或表单参数的值</returns>
        </member>
        <member name="M:Client.Web.BasePage.GetQueryInt(System.String,System.Int32)">
            <summary>
            获得指定Url参数的int类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.BasePage.GetFormInt(System.String,System.Int32)">
            <summary>
            获得指定表单参数的int类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.BasePage.GetInt(System.String,System.Int32)">
            <summary>
            获得指定Url或表单参数的int类型值, 先判断Url参数是否为缺省值, 如为True则返回表单参数的值
            </summary>
            <param name="strName">Url或表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url或表单参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.BasePage.GetQueryFloat(System.String,System.Single)">
            <summary>
            获得指定Url参数的float类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.BasePage.GetFormFloat(System.String,System.Single)">
            <summary>
            获得指定表单参数的float类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的float类型值</returns>
        </member>
        <member name="M:Client.Web.BasePage.GetFloat(System.String,System.Single)">
            <summary>
            获得指定Url或表单参数的float类型值, 先判断Url参数是否为缺省值, 如为True则返回表单参数的值
            </summary>
            <param name="strName">Url或表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url或表单参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.BasePage.Quote(System.Object)">
            <summary>
            将英文的引号转为中文的引号
            </summary>
            <param name="txt"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.BasePage.Json(System.Object)">
            <summary>
            对文本JSON编码过滤,以避免对JOSN代码进行破坏
            </summary>
            <param name="text">字符串</param>
        </member>
        <member name="M:Client.Web.BasePage.HTML(System.Object)">
            <summary>
            对文本HTML编码过滤,以避免对HTML代码进行破坏
            </summary>
            <param name="html">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.BasePage.UnicodeToHtml(System.Object)">
            <summary>
            将Unicode字符转为HTML形式输出(可对韩文进行转换)
            </summary>
            <param name="text">字符串</param>
        </member>
        <member name="M:Client.Web.BasePage.ClearHtml(System.Object)">
            <summary>
            清除HTML标签
            </summary>
            <param name="text">字符串</param>
        </member>
        <member name="M:Client.Web.BasePage.AddMetaContentType">
            <summary>
            Adds the content-type meta tag to the header.
            </summary>
        </member>
        <member name="M:Client.Web.BasePage.AddMetaTag(System.String,System.String)">
            <summary>
            Add a meta tag to the page's header.
            </summary>
        </member>
        <member name="M:Client.Web.BasePage.AddGenericLink(System.String,System.String,System.String)">
            <summary>
            Adds the generic link to the header.
            </summary>
        </member>
        <member name="M:Client.Web.BasePage.AddCSSLink(System.String,System.String,System.Boolean)">
            <summary>
            添加CSS链接
            </summary>
            <param name="title">标题</param>
            <param name="href">路径</param>
            <param name="media">媒体</param>
            <param name="withoutAbsoluteUrl">相对地址</param>
        </member>
        <member name="M:Client.Web.BasePage.AddGenericLink(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Adds the generic link to the header.
            </summary>
            <param name="relation">关系：Stylesheet,Alternate,etc.</param>
            <param name="title">标题</param>
            <param name="href">路径</param>
            <param name="type">类型：text/css,text/html,text/xml等等</param>
            <param name="media">媒介</param>
        </member>
        <member name="M:Client.Web.BasePage.AddJavaScriptToHead(System.String)">
            <summary>
            添加教本文件到头部
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Client.Web.BasePage.AddJavaScriptToFoot(System.String)">
            <summary>
            将脚本加在文档尾部
            </summary>
            <param name="src"></param>
        </member>
        <member name="M:Client.Web.BasePage.RunJavaScriptOnFoot(System.String)">
            <summary>
            在文档尾部运行代码
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Client.Web.BasePage.AddJavaScriptToLiteral(System.String,System.String[])">
            <summary>
            添加JS到页面指定位置
            </summary>
            <param name="phID"></param>
            <param name="srcs"></param>
        </member>
        <member name="M:Client.Web.BasePage.BuildUrlString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            修改URL中的参数值
            </summary>
            <param name="col">要加入到新Url中的参数名和值的集合。</param>
            <returns>分页导航按钮的超链接字符串，包括分页参数。</returns>
            string currentUrl = this.Page.Request.Path;
            string urlParams = this.Page.Request.QueryString;
        </member>
        <member name="P:Client.Web.BasePage.Passport">
            <summary>
            
            </summary>
        </member>
        <member name="P:Client.Web.BasePage.CurrentUserID">
            <summary>
            当前用户名
            </summary>
        </member>
        <member name="P:Client.Web.BasePage.ThemeName">
            <summary>
            主题名称
            </summary>
        </member>
        <member name="P:Client.Web.BasePage.ApplicationPath">
            <summary>
            应用程序路径
            </summary>
        </member>
        <member name="P:Client.Web.BasePage.IPAddress">
            <summary>
            当前页面客户端的IP
            </summary>
        </member>
        <member name="P:Client.Web.BasePage.JsUrlRoot">
            <summary>
            JS的根路径
            </summary>
        </member>
        <member name="P:Client.Web.BasePage.CssUrlRoot">
            <summary>
            CSS的根路径
            </summary>
        </member>
        <member name="P:Client.Web.BaseDetailPage.ItemID">
            <summary>
            简单的一对一的条件
            </summary>
        </member>
        <member name="P:Client.Web.BaseDetailPage.SimpleFilter">
            <summary>
            简单的一对一的条件
            </summary>
        </member>
        <member name="P:Client.Web.BaseDetailPage.ComplexFilter">
            <summary>
            复合条件，主要用于方案
            </summary>
        </member>
        <member name="T:Client.Web.AspNetUrlPager">
             <summary>
             用于ASP.NET Web应用程序中对数据进行分页的的服务器控件。
             </summary>
             <remarks>不同于DataGrid控件，AspNetPager分页控件本身并不显示任何数据，而只显示页导航元素，数据在页面上的显示方式与该控件无关。该控件可以为DataGrid、DataList、Repeater以及自定义控件进行分页，配合Sql存储过程，分页性能较使用DataGrid分页有明显提升，尤其是当数据量大时性能可提升数倍！
             <p>AspNetPager 2.0 中新增了通过Url来分页的功能，这使得访问者可以直接输入相应的Url来访问任何页面，并且搜索引擎也可以直接检索每个页面，若使用DataGrid的分页功能，这是无法实现的。</p>
             <p>要使用 AspNetPager 分页控件，必须最少指定它的 <see cref="P:Client.Web.AspNetUrlPager.RecordCount"/> 属性，指定并编写 <see cref="!:PageChanged"/> 事件的处理程序。
             <see cref="P:Client.Web.AspNetUrlPager.RecordCount"/> 属性指定要分页的所有数据的总项数，若未指定该值或该值小于等于 <see cref="P:Client.Web.AspNetUrlPager.PageSize"/> ，则AspNetPager控件不会显示任何内容。
             若未指定并编写 <see cref="!:PageChanged"/> 事件处理程序，则当用户点击页导航元素或在页索引文本框中手式输入页索引并提交时AspNetPager不会跳转到指定的页。
             AspNetPager控件的分页方法和DataGrid基本相同，即在它的 <see cref="!:PageChanged"/> 事件处理程序中将传递事件数据的 <see cref="T:Client.Web.PageChangedEventArgs"/> 的 <see cref="P:Client.Web.PageChangedEventArgs.NewPageIndex"/>值赋给 AspNetPager的 <see cref="P:Client.Web.AspNetUrlPager.CurrentPageIndex"/>属性，然后重新将新的数据与数据显示控件绑定。 </p></remarks>
             <example>以下示例说明如何用AspNetPager对DataGrid进行分页。
             <code><![CDATA[
            <%@ Page Language="C#"%>
            <%@ Import Namespace="System.Data"%>
            <%@Import Namespace="System.Data.SqlClient"%>
            <%@Import Namespace="System.Configuration"%>
            <%@Register TagPrefix="Webdiyer" Namespace="Wuqi.Webdiyer" Assembly="aspnetpager"%>
            <HTML>
            <HEAD>
            <TITLE>Welcome to Webdiyer.com </TITLE>
              <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("GetNews",conn);
            				cmd.CommandType=CommandType.StoredProcedure;
            				cmd.Parameters.Add("@pageindex",1);
            				cmd.Parameters.Add("@pagesize",1);
            				cmd.Parameters.Add("@docount",true);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			cmd.Parameters.Add("@docount",false);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            			pager.CustomInfoText="记录总数：<font color=\"blue\"><b>"+pager.RecordCount.ToString()+"</b></font>";
            			pager.CustomInfoText+=" 总页数：<font color=\"blue\"><b>"+pager.PageCount.ToString()+"</b></font>";
            			pager.CustomInfoText+=" 当前页：<font color=\"red\"><b>"+pager.CurrentPageIndex.ToString()+"</b></font>";
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
              </script>
                 <meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Webdiyer(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:DataGrid id="dataGrid1" runat="server" />
            
            			<Webdiyer:AspNetPager id="pager" 
            			runat="server" 
            			PageSize="8" 
            			NumericButtonCount="8" 
            			ShowCustomInfoSection="left" 
            			PagingButtonSpacing="0"
            			ShowInputBox="always" 
            			CssClass="mypager" 
            			HorizontalAlign="right" 
            			OnPageChanged="ChangePage"  
            			SubmitButtonText="转到" 
            			NumericButtonTextFormatString="[{0}]"/>
            
            		</form>
            	</body>
            </HTML>
             ]]>
             </code>
             <p>下面是该示例所用的Sql Server存储过程：</p>
             <code>
             <![CDATA[
            CREATE procedure GetNews
             	(@pagesize int,
            		@pageindex int,
            		@docount bit)
            		as
            		set nocount on
            		if(@docount=1)
            		select count(id) from news
            		else
            		begin
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.source,O.title,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		end
            		set nocount off
            GO
             ]]>
             </code></example>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.OnLoad(System.EventArgs)">
            <summary>
            重写 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> 方法。
            </summary>
            <param name="e">包含事件数据的 <see cref="T:System.EventArgs"/> 对象。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.OnPreRender(System.EventArgs)">
            <summary>
            重写<see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/>方法。
            </summary>
            <param name="e">包含事件数据的 <see cref="T:System.EventArgs"/> 对象。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写<see cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)"/> 方法，将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 中
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)"/> 方法，将 <see cref="T:Client.Web.AspNetPager"/> 控件的 HTML 开始标记输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)"/> 方法，将 <see cref="T:Client.Web.AspNetPager"/> 控件的 HTML 结束标记输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)"/> 方法，将控件的内容呈现到指定 <see cref="T:System.Web.UI.HtmlTextWriter"/> 的编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.GetStyleString">
            <summary>
            将基控件的Style转换为CSS字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.WriteCellAttributes(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            为用户自定义信息区和页导航按钮区和td添加属性。
            </summary>
            <param name="writer"></param>
            <param name="leftCell">是否为第一个td</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.GetHrefString(System.Int32)">
            <summary>
            获取分页导航按钮的超链接字符串。
            </summary>
            <param name="pageIndex">该分页按钮相对应的页索引。</param>
            <returns>分页导航按钮的超链接字符串。</returns>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.BuildUrlString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            当使用Url分页方式时，在当前Url上加入分页参数，若该参数存在，则改变其值。
            </summary>
            <param name="col">要加入到新Url中的参数名和值的集合。</param>
            <returns>分页导航按钮的超链接字符串，包括分页参数。</returns>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.CreateNavigationButton(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            创建第一页、上一页、下一页及最后一页分页按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="btnname">分页按钮名。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.WriteCssClass(System.Web.UI.HtmlTextWriter)">
            <summary>
            写入CSS类名。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.AddToolTip(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            加入导航按钮提示文本。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="pageIndex">导航按钮对应的页索引。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.CreateNumericButton(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            创建分页数值导航按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="index">要创建按钮的页索引的值。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.WriteButtonSpace(System.Web.UI.HtmlTextWriter)">
            <summary>
            在分页导航元素间加入空格。
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.GetChinesePageIndex(System.Int32)">
            <summary>
            获取中文页索引字符。
            </summary>
            <param name="index">中文字符对应的页索引数值</param>
            <returns>对应于页索引数值的中文字符</returns>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.CreateNumericImages(System.Web.UI.HtmlTextWriter,System.Int32,System.Boolean)">
            <summary>
            创建页索引图片按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="index">页索引数值。</param>
            <param name="isCurrent">是否是当前页索引。</param>
        </member>
        <member name="M:Client.Web.AspNetUrlPager.CreateMoreButton(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            创建“更多页”（...）按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="pageIndex">链接到按钮的页的索引。</param>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ShowNavigationToolTip">
            <summary>
            获取或设置一个值，该值批示当鼠标指针悬停在导航按钮上时是否显示工具提示。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.NavigationToolTipTextFormatString">
            <summary>
            获取或设置导航按钮工具提示文本的格式。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ChinesePageIndex">
            <summary>
            获取或设置一个值，该值指示是否将页索引按钮用中文数字代替。
            </summary>
            <remarks>
            将该值设为true并且未使用图片按钮时，页索引按钮中的数值1、2、3等将会被中文字符一、二、三等代替。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.NumericButtonTextFormatString">
            <summary>
            获取或设置页索引数值导航按钮上文字的显示格式。
            </summary>
            <value>
            字符串，指定页索引数值按钮上文字的显示格式，默认值为<see cref="F:System.String.Empty"/>，即未设置该属性。</value>
            <remarks>
            使用NumericButtonTextFormatString属性指定页索引数值按钮的显示格式，如未设置该值时索引按钮文本将会是：1 2 3 ...，设置该值将改变索引按钮文本的显示格式，
            如将该值设为“[{0}]”则索引文本会显示为：[1] [2] [3] ...，将该值设为“-{0}-”则会使索引文本变为：-1- -2- -3- ...。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.PagingButtonType">
            <summary>
            获取或设置分页导航按钮的类型，即使用文字还是图片。
            </summary>
            <remarks>
            要使用图片按钮，您需要准备以下图片：从0到9的十个数值图片（当ShowPageIndex设为true时），第一页、上一页、下一页、最后一页及更多页（...）五个按钮图片（当ShowFirstLast及ShowPrevNext都设为true时），
            若需要使当前页索引的数值按钮不同于别的页索引数值按钮，则还需准备当前页索引的按钮图片；
            若需要使已禁用的第一页、上一页、下一页及最后一页按钮图片不同于正常的按钮图片，则还需准备这四个按钮在禁用状态下的图片；
            <p><b>图片文件的命名规则如下：</b></p>
            <p>从0到9十张数值按钮图片必须命名为“数值+ButtonImageNameExtension+ButtonImageExtension”，其中的ButtonImageNameExtension可以不用设置，
            ButtonImageExtension是图片文件的后缀名，如 .gif或 .jpg等可以在浏览器中显示的任何图片文件类型。如页索引“1”的图片文件可命名为“1.gif”或“1.jpg”，
            当您有两套或更多套图片文件时，可以通过指定ButtonImageNameExtension属性值来区分不同套的图片，如第一套图片可以不用设ButtonImageNameExtension，则图片文件名类似于“1.gif”、“2.gif”等等，而第二套图片则设置ButtonImageNameExtension为“f”，图片文件名类似于“1f.gif”，“2f.gif”等等。</p>
            <p>第一页按钮的图片文件名以“first”开头，上一页按钮图片名以“prev”开头，下一页按钮图片名以“next”开头，最后一页按钮图片名以“last”开头，更多页按钮图片名以“more”开头，是否使用ButtonImageNameExtension取决于数值按钮的设置及是否有更多套图片。</p>
            </remarks>
            <example>
            以下代码片段示例如果使用图片按钮：
            <p>
            <code><![CDATA[
            <Webdiyer:AspNetPager runat="server" 
            	id="pager1" 
            	OnPageChanged="ChangePage"  
            	PagingButtonType="image" 
            	ImagePath="images" 
            	ButtonImageNameExtension="n" 
            	DisabledButtonImageNameExtension="g" 
            	ButtonImageExtension="gif" 
            	CpiButtonImageNameExtension="r" 
            	PagingButtonSpacing=5/>
            ]]>
            </code>
            </p>
            </example>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.NumericButtonType">
            <summary>
            获取或设置页导航数值按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image当又不想让页索引数值按钮使用图片时，可以将该值设为Text，这会使页索引数据按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.NavigationButtonType">
            <summary>
            获取或设置第一页、上一页、下一页和最后一页按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image但又不想让第一页、下一页、下一页和最后一页按钮使用图片，则可以将该值设为Text，这会使前面的四个按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.MoreButtonType">
            <summary>
            获取或设置“更多页”（...）按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image但又不想让更多页（...）按钮使用图片时，可以将此值设为Text，这会使更多页按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.PagingButtonSpacing">
            <summary>
            获取或设置分页导航按钮之间的间距。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ShowFirstLast">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示第一页和最后一页按钮。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ShowPrevNext">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示上一页和下一页按钮。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ShowPageIndex">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示页索引数值按钮。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.FirstPageText">
            <summary>
            获取或设置为第一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.PrevPageText">
            <summary>
            获取或设置为上一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.NextPageText">
            <summary>
            获取或设置为下一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.LastPageText">
            <summary>
            获取或设置为最后一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.NumericButtonCount">
            <summary>
            获取或设置在 <see cref="T:Client.Web.AspNetPager"/> 控件的页导航元素中同时显示的数值按钮的数目。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ShowDisabledButtons">
            <summary>
            获取或设置一个值，该值指定是否显示已禁用的按钮。
            </summary>
            <remarks>
            该值用来指定是否显示已禁用的分页导航按钮，当当前页为第一页时，第一页和上一页按钮将被禁用，当当前页为最后一页时，下一页和最后一页按钮将被禁用，被禁用的按钮没有链接，在按钮上点击也不会有任何作用。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ImagePath">
            <summary>
            获取或设置当使用图片按钮时，图片文件的路径。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ButtonImageExtension">
            <summary>
            获取或设置当使用图片按钮时，图片的类型，如gif或jpg，该值即图片文件的后缀名。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ButtonImageNameExtension">
            <summary>
            获取或设置自定义图片文件名的后缀字符串，以区分不同类型的按钮图片。
            </summary>
            <remarks><note>注意：</note>该值不是文件后缀名，而是为区分不同的图片文件而在图片名中加入的字符串，如：
            当前有两套按钮图片，其中一套中的“1”的图片名可为“1f.gif”，另一套中的“1”的图片名可起为“1n.gif”，其中的f和n即为ButtonImageNameExtension。</remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.CpiButtonImageNameExtension">
            <summary>
            获取或设置当前页索引按钮的图片名后缀。
            </summary>
            <remarks>
            当 <see cref="P:Client.Web.AspNetUrlPager.PagingButtonType"/> 设为 Image 时，该属性允许您设置当前页索引数值按钮使用的图片名后缀字符，因此可以使当前页索引按钮与其它页索引按钮使用不同的图片，若未设置该值，则默认值为<see cref="P:Client.Web.AspNetUrlPager.ButtonImageNameExtension"/>，即当前页索引按钮与其它页索引按钮使用相同的图片。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.DisabledButtonImageNameExtension">
            <summary>
            获取或设置已禁用的页导航按钮图片名后缀字符串。
            </summary>
            <remarks>
            当 <see cref="P:Client.Web.AspNetUrlPager.PagingButtonType"/> 设为 Image 时， 该值允许您设置已禁用（即没有链接，因而点击后无反应）的页导航按钮（包括第一页、上一页、下一页、最后一页四个按钮）的图片文件名后缀字符串，因此可以使已禁用的页导航按钮不同于正常的页导航按钮。若未设置该值，则默认值为<see cref="P:Client.Web.AspNetUrlPager.ButtonImageNameExtension"/>，即已禁用的页导航按钮与正常的页导航按钮使用相同的图片。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ButtonImageAlign">
            <summary>
            指定当使用图片按钮时，图片的对齐方式。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.UrlPaging">
             <summary>
             获取或设置是否启用url来传递分页信息。
             </summary>
             <remarks>
             启用Url分页方式是将用户欲访问的页索引通过Url来传递，由于该分页方式不使用页面向自身回发来传递数据，
             所以每次分页时所有的数据都恢复为初始值或需要重新获取。使用Url分页方式不支持动态改变分页控件的属性值，
             因暂时无法将新的属性值通过Url来传递给下一页。
             </remarks>
             <example>以下示例说明如何用AspNetPager的Url分页方式对DataGrid进行分页（使用Access数据库）：
             <code><![CDATA[
            <%@Register TagPrefix="Webdiyer" Namespace="Wuqi.Webdiyer" Assembly="aspnetpager"%>
            <%@Import Namespace="System.Data.OleDb"%>
            <%@ Import Namespace="System.Data"%>
            <%@ Page Language="C#" debug=true%>
            <HTML>
            	<HEAD>
            		<TITLE>Welcome to Webdiyer.com </TITLE>
            		<script runat="server">
            		OleDbConnection conn;
            		OleDbCommand cmd;
            		void Page_Load(object src,EventArgs e){
            		conn=new OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source="+Server.MapPath("access/aspnetpager.mdb"));
            		if(!Page.IsPostBack){
            		cmd=new OleDbCommand("select count(newsid) from wqnews",conn);
            		conn.Open();
            		pager.RecordCount=(int)cmd.ExecuteScalar();
            		conn.Close();
            		BindData();
            		}
            		}
            
            		void BindData(){
            		cmd=new OleDbCommand("select newsid,heading,source,addtime from wqnews order by addtime desc",conn);
            		OleDbDataAdapter adapter=new OleDbDataAdapter(cmd);
            		DataSet ds=new DataSet();
            		adapter.Fill(ds,pager.PageSize*(pager.CurrentPageIndex-1),pager.PageSize,"news");
            		dg.DataSource=ds.Tables["news"];
            		dg.DataBind();
            		}
            
            		void ChangePage(object src,PageChangedEventArgs e){
            		pager.CurrentPageIndex=e.NewPageIndex;
            		BindData();
            		}
            
            		</script>
            		<meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Webdiyer(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<h2 align="center">AspNetPager分页示例</h2>
            			<asp:DataGrid id="dg" runat="server" 
            			Width="760" CellPadding="4" Align="center" />
            			
            			<Webdiyer:AspNetPager runat="server" id="pager" 
            			OnPageChanged="ChangePage" 
            			HorizontalAlign="center" 
            			style="MARGIN-TOP:10px;FONT-SIZE:16px" 
            			PageSize="8" 
            			ShowInputBox="always" 
            			SubmitButtonStyle="border:1px solid #000066;height:20px;width:30px" 
            			InputBoxStyle="border:1px #0000FF solid;text-align:center" 
            			SubmitButtonText="转到" 
            			UrlPaging="true" 
            			UrlPageIndexName="pageindex" />
            		</form>
            	</body>
            </HTML>
             ]]></code>
             </example>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.UrlPageIndexName">
            <summary>
            获取或设置当启用Url分页方式时，在url中表示要传递的页索引的参数的名称。
            </summary>
            <remarks>
            该属性允许您自定义通过Url传递页索引时表示要传递的页索引的参数的名称，以避免与现有的参数名重复。
            <p>该属性的默认值是“page”，即通过Url分页时，显示在浏览器地址栏中的Url类似于：</p>http://www.webdiyer.com/aspnetpager/samples/datagrid_url.aspx?page=2 
            <p>如将该值改为“pageindex”，则上面的Url将变为：</p><p>http://www.webdiyer.com/aspnetpager/samples/datagrid_url.aspx?pageindex=2 </p>
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.CurrentPageIndex">
             <summary>
             获取或设置当前显示页的索引。
             </summary>
            <remarks>使用此属性来确定在 AspNetPager 控件中当前显示的页，当前显示的页的数字索引将以红色字体加粗显示。此属性还用于以编程的方式控制所显示的页。
            <p>　<b>注意：</b>不同于DataGrid控件的CurrentPageIndex，AspNetPager的CurrentPageIndex属性是从1开始的。</p></remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.RecordCount">
             <summary>
             获取或设置需要分页的所有记录的总数。
             </summary>
             <remarks>
             当页面第一次加载时，应以编程方式将从存储过程或Sql语句中返回的数据表中所有要分页的记录的总数赋予该属性，AspNetPager会将其保存的ViewState中并在页面回发时从ViewState中获取该值，因此避免了每次分页都要访问数据库而影响分页性能。AspNetPager根据要分页的所有数据的总项数和 <see cref="P:Client.Web.AspNetUrlPager.PageSize"/> 属性来计算显示所有数据需要的总页数，即 <see cref="P:Client.Web.AspNetUrlPager.PageCount"/>的值。
             </remarks>
             <example>
             下面的示例显示如何以编程方式将从Sql语句返回的记录总数赋给该属性：
             <p>
             <code><![CDATA[
             <HTML>
             <HEAD>
             <TITLE>Welcome to Webdiyer.com </TITLE>
             <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("select count(id) from news",conn);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetPagedNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
            		</script>
            		<meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Webdiyer(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:DataGrid id="dataGrid1" runat="server" />
            
            			<Webdiyer:AspNetPager id="pager" runat="server" 
            			PageSize="8" 
            			NumericButtonCount="8" 
            			ShowCustomInfoSection="before" 
            			ShowInputBox="always" 
            			CssClass="mypager" 
            			HorizontalAlign="center" 
            			OnPageChanged="ChangePage" />
            
            		</form>
            	</body>
            </HTML>
             ]]>
             </code></p>
             <p>本示例使用的存储过程代码如下：</p>
             <code><![CDATA[
            CREATE procedure GetPagedNews
            		(@pagesize int,
            		@pageindex int)
            		as
            		set nocount on
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.title,O.source,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		set nocount off
            GO
             ]]>
             </code>
             </example>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.PagesRemain">
            <summary>
            获取当前页之后未显示的页的总数。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.PageSize">
            <summary>
            获取或设置每页显示的项数。
            </summary>
            <remarks>
            该值获取或设置数据呈现控件每次要显示数据表中的的数据的项数，AspNetPager根据该值和 <see cref="P:Client.Web.AspNetUrlPager.RecordCount"/> 来计算显示所有数据需要的总页数，即 <see cref="P:Client.Web.AspNetUrlPager.PageCount"/>的值。</remarks>
            <example>以下示例将 <see cref="T:Client.Web.AspNetPager"/> 设置为允许每页显示8条数据：
            <code>
            <![CDATA[
             ...
             <Webdiyer:AspNetPager id="pager" runat="server" PageSize=8 OnPageChanged="ChangePage"/>
             ...
            ]]></code></example>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.RecordsRemain">
            <summary>
            获取在当前页之后还未显示的剩余记录的项数。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.PageCount">
            <summary>
            获取所有要分页的记录需要的总页数。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ShowInputBox">
             <summary>
             获取或设置页索引文本框的显示方式。
             </summary>
             <remarks>
             页索引文件框允许用户手式输入要访问的页的索引，当页数非常多时，显示页索引文本框非常方便用户跳转到指定的页，默认情况下，该文本框只有在总页数大于或等于 <see cref="P:Client.Web.AspNetUrlPager.ShowBoxThreshold"/> 的值时才显示，否则不显示，要想该文本框任何时候都显示，请将其值设为Always，若希望任何时候都不显示，则应设为Never。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.InputBoxClass">
            <summary>
            获取或设置应用于页索引输入文本框的CSS类名。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.InputBoxStyle">
            <summary>
            获取或设置页索引输入文本框的CSS样式文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.TextBeforeInputBox">
            <summary>
            获取或设置页索引页索引输入文本框前的文本字符串值。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.TextAfterInputBox">
            <summary>
            获取或设置页索引文本输入框后的文本内容字符串值。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.SubmitButtonText">
            <summary>
            获取或设置提交按钮上的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.SubmitButtonClass">
            <summary>
            获取或设置应用于提交按钮的CSS类名。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.SubmitButtonStyle">
            <summary>
            获取或设置应用于提交按钮的CSS样式。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ShowBoxThreshold">
            <summary>
            获取或设置自动显示页索引输入文本框的最低起始页数。
            </summary>
            <remarks>
            当 <see cref="P:Client.Web.AspNetUrlPager.ShowInputBox"/> 设为Auto（默认）并且要分页的数据的总页数达到该值时会自动显示页索引输入文本框，默认值为30。该选项当 <see cref="P:Client.Web.AspNetUrlPager.ShowInputBox"/> 设为Never或Always时没有任何作用。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.ShowCustomInfoSection">
            <summary>
            获取或设置显示用户自定义信息区的方式。
            </summary>
            <remarks>
            该属性值设为Left或Right时会在分页导航元素左边或右边划出一个专门的区域来显示有关用户自定义信息，设为Never时不显示。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.CustomInfoTextAlign">
            <summary>
            获取或设置用户自定义信息区文本的对齐方式。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.CustomInfoSectionWidth">
            <summary>
            获取或设置用户自定义信息区的宽度。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.CustomInfoClass">
            <summary>
            获取或设置应用于用户自定义信息区的级联样式表类名。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.CustomInfoStyle">
            <summary>
            获取或设置应用于用户自定义信息区的CSS样式文本。
            </summary>
            <value>字符串值，要应用于用户自定义信息区的CSS样式文本。</value>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.CustomInfoText">
            <summary>
            获取或设置在显示在用户自定义信息区的用户自定义文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.AlwaysShow">
            <summary>
            获取或设置一个值，该值指定是否总是显示AspNetPager分页按件，即使要分页的数据只有一页。
            </summary>
            <remarks>
            默认情况下，当要分页的数据小于两页时，AspNetPager不会在页面上显示任何内容，将此属性值设为true时，即使总页数只有一页，AspNetPager也将显示分页导航元素。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.CssClass">
            <summary>
            获取或设置由 AspNetPager 服务器控件在客户端呈现的级联样式表 (CSS) 类。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.EnableViewState">
            <summary>
            获取或设置一个值，该值指示 AspNetPager 服务器控件是否向发出请求的客户端保持自己的视图状态，该属性经重写后不允许设为false。
            </summary>
            <remarks><see cref="T:Client.Web.AspNetPager"/> 服务器控件将一些重要的分页信息保存在ViewState中，当使用Url分页方式时，虽然视图状态在分页过程中没有任何作用，但若当前页需要回发，则必须启用视图状态以便分页控件能在页面回发后获取回发前的分页状态；当通过页面回发（PostBack）的方式来分页时，要使AspNetPager正常工作，必须启用视图状态。
            <p><note>该属性并不能禁止用户用<![CDATA[<%@Page EnableViewState=false%> ]]>页指令来禁用整个页面的视图状态，当使用此指令并且设置AspNetPager通过页面回发来分页时，AspNetPager因为无法获取保存的信息而不能正常工作。</note></p></remarks>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.PageIndexOutOfRangeErrorString">
            <summary>
            获取或设置当用户输入的页索引超出范围（大于最大页索引或小于最小页索引）时在客户端显示的错误信息。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetUrlPager.InvalidPageIndexErrorString">
            <summary>
            获取或设置当用户输入无效的页索引（负值或非数字）时在客户端显示的错误信息。
            </summary>
        </member>
        <member name="T:Client.Web.PagerUrlDesigner">
            <summary>
            <see cref="T:Client.Web.AspNetPager"/> 服务器控件设计器。
            </summary>
        </member>
        <member name="M:Client.Web.PagerUrlDesigner.#ctor">
            <summary>
            初始化 PagerDesigner 的新实例。
            </summary>
        </member>
        <member name="M:Client.Web.PagerUrlDesigner.GetDesignTimeHtml">
            <summary>
            获取用于在设计时表示关联控件的 HTML。
            </summary>
            <returns>用于在设计时表示控件的 HTML。</returns>
        </member>
        <member name="M:Client.Web.PagerUrlDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            获取在呈现控件时遇到错误后在设计时为指定的异常显示的 HTML。
            </summary>
            <param name="e">要为其显示错误信息的异常。</param>
            <returns>设计时为指定的异常显示的 HTML。</returns>
        </member>
        <member name="M:Client.Web.SEOHelper.Load(System.String)">
            <summary>
            加载
            </summary>
            <param name="path">配置文件所在的文件夹</param>
        </member>
        <member name="M:Client.Web.SEOHelper.Reload(System.String)">
            <summary>
            重新加载
            </summary>
            <param name="path">配置文件所在的文件夹</param>
        </member>
        <member name="M:Client.Web.SEOHelper.Get(Client.Web.ISEOPage)">
            <summary>
            获取SEO项
            </summary>
            <param name="seoPage">ISEOPage</param>
        </member>
        <member name="T:Client.Web.MathVerifyCode">
            <summary>
            数学算式的验证码
            </summary>
        </member>
        <member name="M:Client.Web.MathVerifyCode.OutputImage(System.Web.HttpContext,System.String)">
            <summary>
            输出验证码表达式到浏览器
            </summary>
            <param name="context">httpcontext</param>
            <param name="sessionKey">保存运算值的SESSION的KEY</param>
        </member>
        <member name="M:Client.Web.MathVerifyCode.DisableHttpCache(System.Web.HttpContext)">
            <summary>
            禁用缓存
            </summary>
            <param name="context">httpcontext</param>
        </member>
        <member name="M:Client.Web.HtmlHelper.Encode(System.String)">
            <summary>
            返回 HTML 字符串的编码结果
            </summary>
            <param name="textToEncode">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.Decode(System.String)">
            <summary>
            返回 HTML 字符串的解码结果
            </summary>
            <param name="textToDecode">字符串</param>
            <returns>解码结果</returns>
        </member>
        <!-- 对于成员“M:Client.Web.HtmlHelper.ConvertToSafeHtml(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Client.Web.HtmlHelper.ConvertToOriginalHtml(System.String)">
            <summary>
            还原危险html标识字符
            如&amp;等
            </summary>
            <param name="text">要转换的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.StripHtml(System.String)">
            <summary>
            去除Html标签
            </summary>
            <param name="value">待转化的字符串</param>
            <returns>经过转化的字符串</returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.StripAllTags(System.String)">
            <summary>
            去除html标签和客户端脚本代码
            </summary>
            <param name="text">待转化的字符串</param>
            <returns>经过转化的字符串</returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.StripScript(System.String)">
            <summary>
            去除客户端脚本代码
            </summary>
            <param name="text">待转化的字符串</param>
            <returns>经过转化的字符串</returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.JsEscape(System.String)">
            <summary>
            将文本中的JS代码进行转换
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.StripStyle(System.String)">
            <summary>
            去除CSS样式代码
            </summary>
            <param name="text">待转化的字符串</param>
            <returns>经过转化的字符串</returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.AppendCssClass(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Appends a CSS class to a control.
            </summary>
            <param name="control">The control.</param>
            <param name="newClass">The new class.</param>
        </member>
        <member name="M:Client.Web.HtmlHelper.RemoveCssClass(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Removes a CSS class to a control.
            </summary>
            <param name="control">The control.</param>
            <param name="classToRemove">The new class.</param>
        </member>
        <member name="M:Client.Web.HtmlHelper.ClearHtmlTag(System.String)">
            <summary>
            清理HTMLL标签
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.UnicodeToHtml(System.String)">
            <summary>
            将Unicode字符转为HTML形式输出(可对韩文进行转换)
            </summary>
            <param name="bstr"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.HtmlHelper.AppendAttributeValue(System.Web.UI.WebControls.WebControl,System.String,System.String)">
            <summary>
            Appends the attribute value to the control appropriately.
            </summary>
            <param name="control"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="F:Client.Web.Filter.Key2">
            <summary>
            没有前缀的建值
            </summary>
        </member>
        <member name="T:Client.Web.Editor">
            <summary>
            Summary description for Editor.
            </summary>
        </member>
        <member name="P:Client.Web.Editor.EnableHtmlModeEditing">
            <summary>
            Property EnableHtmlModeEditing (bool)
            </summary>
        </member>
        <member name="T:Client.Web.Controls.EnumerateDropdownList">
            <summary>
            通用的枚举类型选择下拉框
            </summary>
        </member>
        <member name="M:Client.Web.Controls.EnumerateDropdownList.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Client.Web.Controls.EnumerateDropdownList.InitItems(System.Type)">
            <summary>
            初始化下拉框
            </summary>
            <param name="enumType">枚举类型说明</param>
        </member>
        <member name="M:Client.Web.Controls.EnumerateDropdownList.GetSelectedValue``1">
            <summary>
            读取枚举类型的值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Client.Web.Controls.EnumerateDropdownList.SetSelectedValue``1(``0)">
            <summary>
            设置枚举类型的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
        </member>
        <member name="T:Client.Components.SkinnedForumWebControl">
            <summary>
            皮肤控件基类
            </summary>
        </member>
        <member name="F:Client.Components.SkinnedForumWebControl.forumContext">
            <summary>
            上下文
            </summary>
        </member>
        <member name="F:Client.Components.SkinnedForumWebControl.skinName">
            <summary>
            皮肤文件
            </summary>
        </member>
        <member name="M:Client.Components.SkinnedForumWebControl.#ctor(System.Collections.Hashtable)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Client.Components.SkinnedForumWebControl.CreateChildControls">
            <summary>
            This event handler adds the children controls.
            </summary>
        </member>
        <member name="M:Client.Components.SkinnedForumWebControl.LoadSkin">
            <summary>
            Loads the names control template from disk.
            </summary>
        </member>
        <member name="M:Client.Components.SkinnedForumWebControl.InitializeSkin(System.Web.UI.Control)">
            <summary>
            Initialize the control template and populate the control with values
            </summary>
        </member>
        <member name="M:Client.Components.SkinnedForumWebControl.BuildUrlString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            修改URL中的部分参数值。
            </summary>
            <param name="col">要加入到新Url中的参数名和值的集合。</param>
            <returns>分页导航按钮的超链接字符串，包括分页参数。</returns>
            string currentUrl = this.Page.Request.Path;
            string urlParams = this.Page.Request.QueryString;
        </member>
        <member name="P:Client.Components.SkinnedForumWebControl.SkinFilename">
            <summary>
            Allows the default control template to be overridden
            </summary>
        </member>
        <member name="P:Client.Components.SkinnedForumWebControl.SkinName">
            <summary>
            Used to construct paths to images, etc. within controls.
            </summary>
            
        </member>
        <member name="M:Client.Web.UBBHelper.UBBToHtml(System.String)">
            <summary>
            UBB代码处理函数
            </summary>
            <param name="text">要转换的文本</param>
            <returns>输出字符串</returns>
        </member>
        <member name="M:Client.Web.UBBHelper.ParseTable(System.String)">
            <summary>
            转换表格
            </summary>
            <param name="str">内容</param>
            <returns>内容</returns>
        </member>
        <member name="M:Client.Web.UBBHelper.Parsecode(System.String,System.String,System.Int32@,System.Text.StringBuilder@)">
            <summary>
            转换code标签
            </summary>
            <param name="text">内容</param>
            <param name="pcodecount">code的数量</param>
            <param name="builder">转换后的内容</param>
            <returns>内容</returns>
        </member>
        <member name="M:Client.Web.UBBHelper.ClearUBB(System.String)">
            <summary>
            清除UBB标签
            </summary>
            <param name="sDetail">内容</param>
            <returns>内容</returns>
        </member>
        <member name="M:Client.Web.UBBHelper.ClearBR(System.String)">
            <summary>
            清除换行
            </summary>
            <param name="sDetail">内容</param>
            <returns>内容</returns>
        </member>
        <member name="T:Client.Web.RequestHelper">
            <summary>
            关于Request相关处理
            </summary>
        </member>
        <member name="M:Client.Web.RequestHelper.IsPost">
            <summary>
            判断当前页面是否接收到了Post请求
            </summary>
            <returns>是否接收到了Post请求</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.IsGet">
            <summary>
            判断当前页面是否接收到了Get请求
            </summary>
            <returns>是否接收到了Get请求</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetServerString(System.String)">
            <summary>
            返回指定的服务器变量信息
            </summary>
            <param name="strName">服务器变量名</param>
            <returns>服务器变量信息</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetQueryString(System.String)">
            <summary>
            获得指定Url参数的值
            </summary>
            <param name="strName">Url参数</param>
            <returns>Url参数的值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetFormString(System.String)">
            <summary>
            获得指定表单参数的值
            </summary>
            <param name="strName">表单参数</param>
            <returns>表单参数的值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetString(System.String)">
            <summary>
            获得Url或表单参数的值, 先判断Url参数是否为空字符串, 如为True则返回表单参数的值
            </summary>
            <param name="strName">参数</param>
            <returns>Url或表单参数的值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetQueryInt(System.String,System.Int32)">
            <summary>
            获得指定Url参数的int类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetFormInt(System.String,System.Int32)">
            <summary>
            获得指定表单参数的int类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetInt(System.String,System.Int32)">
            <summary>
            获得指定Url或表单参数的int类型值, 先判断Url参数是否为缺省值, 如为True则返回表单参数的值
            </summary>
            <param name="strName">Url或表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url或表单参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetQueryFloat(System.String,System.Single)">
            <summary>
            获得指定Url参数的float类型值
            </summary>
            <param name="strName">Url参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetFormFloat(System.String,System.Single)">
            <summary>
            获得指定表单参数的float类型值
            </summary>
            <param name="strName">表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>表单参数的float类型值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.GetFloat(System.String,System.Single)">
            <summary>
            获得指定Url或表单参数的float类型值, 先判断Url参数是否为缺省值, 如为True则返回表单参数的值
            </summary>
            <param name="strName">Url或表单参数</param>
            <param name="defValue">缺省值</param>
            <returns>Url或表单参数的int类型值</returns>
        </member>
        <member name="M:Client.Web.RequestHelper.InitPageCache(System.Int32)">
            <summary>
            初始化页面的缓存
            </summary>
            <param name="minutes">缓存时间(分)</param>
        </member>
        <member name="M:Client.Web.RequestHelper.InitPageCache(System.Int32,System.Boolean)">
            <summary>
            初始化页面的缓存
            </summary>
            <param name="minutes">缓存时间(分)</param>
            <param name="isHost"></param>
        </member>
        <member name="M:Client.Web.RequestHelper.NoPageCache">
            <summary>
            取消页面缓存
            </summary>
        </member>
        <member name="M:Client.Web.RequestHelper.Request(System.String)">
            <summary>
            取Request中的参数
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.RequestHelper.Request(System.String,System.Boolean)">
            <summary>
            取Request中的参数
            </summary>
            <param name="key"></param>
            <param name="filtrate"></param>
            <returns></returns>
        </member>
        <member name="P:Client.Web.RequestHelper.UrlReferrer">
            <summary>
            返回上一个页面的地址
            </summary>
        </member>
        <member name="P:Client.Web.RequestHelper.FullHost">
            <summary>
            得到当前完整带有端口的主机头
            </summary>
            <returns></returns>
        </member>
        <member name="P:Client.Web.RequestHelper.IsBrowser">
            <summary>
            判断当前访问是否来自浏览器软件
            </summary>
            <returns>当前访问是否来自浏览器软件</returns>
        </member>
        <member name="P:Client.Web.RequestHelper.IPAddress">
            <summary>
            当前页面客户端的IP
            </summary>
        </member>
        <member name="M:Client.Web.PageHelper.GetPagination(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            获限分页html(有上一页下一页)
            </summary>
            <param name="currentPageIndex">当前页</param>
            <param name="pageSize">每页记录数</param>
            <param name="totalCount">总记录数</param>
            <param name="urlFormat">翻页的链接地址格式 如：http://www.9sky.com/music/artist.aspx?currentpage={0} </param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.PageHelper.GetPagination(System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获限分页html(有上一页下一页)
            </summary>
            <param name="currentPageIndex">当前页</param>
            <param name="pageSize">每页记录数</param>
            <param name="totalCount">总记录数</param>
            <param name="urlFormat">翻页的链接地址格式 如：http://www.9sky.com/music/artist.aspx?currentpage={0} </param>
            <param name="size">加载时显示几个</param>
            <param name="pageNum">第几个开始出现前面隐藏</param>
            <param name="pageNumLeft">出现前后隐藏时左面显示几个数字</param>
            <param name="pageNumRight">出现前后隐藏时右边显示几个数字</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.PageHelper.GetSmallPagination(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            获取简单模式的分页
            </summary>
            <param name="pageSize">页大小</param>
            <param name="totalCount">总记录数</param>
            <param name="size">显示分页数</param>
            <param name="urlFormat">翻页的链接地址格式 如：http://www.9sky.com/music/artist.aspx?currentpage={0} </param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.PageHelper.GetRecordsFromPage(System.Int32,System.Int32,System.Int32)">
            <summary>
            计算当前页的总记录数
            </summary>
            <param name="pageIndex">当前页码</param>
            <param name="pageSize">页大小</param>
            <param name="totalRecord">总记录数</param>
            <returns></returns>
        </member>
        <member name="T:Client.Web.UserOnlineInfo">
            <summary>
            在线用户信息
            </summary>
        </member>
        <member name="P:Client.Web.UserOnlineInfo.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Client.Web.UserOnlineInfo.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Client.Web.UserOnlineInfo.IsMale">
            <summary>
            是否为男性的
            </summary>
        </member>
        <member name="P:Client.Web.UserOnlineInfo.StartTime">
            <summary>
            开始时间（开始在线）
            </summary>
        </member>
        <member name="T:Client.Web.FileUploader">
            <summary>
            文件上传类
            </summary>
        </member>
        <member name="M:Client.Web.FileUploader.#ctor">
            <summary>
            文件上传构造器
            </summary>
        </member>
        <member name="M:Client.Web.FileUploader.#ctor(System.Web.HttpPostedFile,System.String,System.String)">
            <summary>
            文件上传构造器
            </summary>
            <param name="postedFile">上传的文件对象</param>
            <param name="saveFolderPath">保存文件的目录Url形式的相对目录 如：/upload/test/</param>
            <param name="saveFileName">保存的文件名（含扩展名）</param>
        </member>
        <member name="M:Client.Web.FileUploader.#ctor(System.Web.HttpPostedFile,System.String,System.String,System.String,System.Int32)">
            <summary>
            文件上传构造器
            </summary>
            <param name="postedFile">上传的文件对象</param>
            <param name="saveFolderPath">保存文件的目录Url形式的相对目录 如：/upload/test/</param>
            <param name="saveFileName">保存的文件名（含扩展名）</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="allowedFileTypes">允许上传文件类型 多个请用逗号隔开，如：rar,jpg,gif。 为空或者“*”时将不限上传类型。</param>
        </member>
        <member name="M:Client.Web.FileUploader.UploadFile">
            <summary>
            上传文件
            </summary>
            <returns>是否上传成功</returns>
        </member>
        <member name="M:Client.Web.FileUploader.UploadFile(System.String)">
            <summary>
            上传文件
            </summary>
            <param name="physicalSavePath">上传保存的物理地址</param>
            <returns>是否上传成功</returns>
        </member>
        <member name="M:Client.Web.FileUploader.UploadFile(System.Web.HttpPostedFile,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="postedFile">上传的文件对象</param>
            <param name="saveFolderPath">保存文件的目录Url形式的相对目录 如：/upload/test/</param>
            <param name="saveFileName">保存的文件名（含扩展名）</param>
            <returns>是否上传成功</returns>
        </member>
        <member name="M:Client.Web.FileUploader.UploadFile(System.Web.HttpPostedFile,System.String,System.String,System.String,System.Int32,System.String@)">
            <summary>
            文件上传
            </summary>
            <param name="postedFile">上传的文件对象</param>
            <param name="saveFolderPath">保存文件的目录Url形式的相对目录 如：/upload/test/</param>
            <param name="saveFileName">保存的文件名（含扩展名）</param>
            <param name="allowedFileTypes">允许上传文件类型 多个请用逗号隔开，如：rar,jpg,gif。 为空或者“*”时将不限上传类型。</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns>是否上传成功</returns>
        </member>
        <member name="P:Client.Web.FileUploader.PostedFile">
            <summary>
            上传的文件对象
            </summary>
        </member>
        <member name="P:Client.Web.FileUploader.SaveFolderPath">
            <summary>
            保存文件的目录Url形式的相对目录
            如：/upload/test/
            </summary>
        </member>
        <member name="P:Client.Web.FileUploader.SaveFileName">
            <summary>
            保存的文件名（含扩展名）
            </summary>
        </member>
        <member name="P:Client.Web.FileUploader.Errors">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:Client.Web.FileUploader.AllowedMaxSize">
            <summary>
            上传文件大小上限 单位：KB
            </summary>
        </member>
        <member name="P:Client.Web.FileUploader.AllowedFileTypes">
            <summary>
            允许上传文件类型
            多个请用逗号隔开，如：rar,jpg,gif
            为空或者“*”时将不限上传类型。
            </summary>
        </member>
        <member name="P:Client.Web.FileUploader.UploadedFilePath">
            <summary>
            上传后的文件路径
            </summary>
        </member>
        <member name="T:Client.Web.Controls.YesNoRadioButtonList">
            <summary>
            Summary description for YesNoRadioButtonList.
            是/否,单选按钮列表
            </summary>
        </member>
        <member name="T:Client.Web.SecureTemplatedWebControl">
            <summary>
            Summary description for SecureTemplatedWebControl.
            </summary>
        </member>
        <member name="T:Client.Web.TemplatedWebControl">
            <summary>
            此基类为所有站点控件的基类.
            </summary>
            <remarks>
            属性说明:
            ParseChildren,PersistChildren: 
            The PersistChildren attribute specifies whether Visual Studio .NET should persist the child content as children controls. 
            The ParseChildren attribute indicates whether or not the child content should be parsed as properties. 
            接口说明:
            INamingContainer: 任何实现该接口的控件都创建一个新的命名空间,在这个新的命名空间中,所有子控件 ID 属性在整个应用程序内保证是唯一的.
            由该接口提供的标记允许在支持数据绑定的 Web 服务器控件内唯一命名动态生成的服务器控件实例.
            这些控件包括 Repeater、DataGrid、DataList、CheckBoxList、ChangePassword、LoginView、Menu、SiteMapNodeItem 及 RadioButtonList 控件.
            在开发模板化控件时，应实现该接口以避免同一页上的命名冲突.
            </remarks>
        </member>
        <member name="M:Client.Web.TemplatedWebControl.DataBind">
            <exclude/>
        </member>
        <member name="M:Client.Web.TemplatedWebControl.CreateExternalSkinFileName(System.String)">
            <summary>
            生成外部皮肤文件名(默认名称为Skin-实例的系统名称)
            </summary>
            <param name="path">路径</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.TemplatedWebControl.CreateExternalSkinFileName(System.String,System.String)">
            <summary>
            生成外部皮肤文件名
            </summary>
            <param name="path">路径</param>
            <param name="name">皮肤名称</param>
            <returns></returns>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.Controls">
            <exclude/>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.CurrentUser">
            <summary>
            读取使用当前页面的用户(未登陆状态下为匿名)
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.ThemeName">
            <summary>
            获取保存在用户信息中的主题名称(默认为Default).
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.SkinFolder">
            <summary>
            根据主题名称获取主题文件夹
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.SkinPath">
            <summary>
            获取对应主题的文件路径
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.ExternalSkinFileName">
            <summary>
            获取需要加载的皮肤文件名
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.Folder">
            <summary>
            皮肤目录名
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.SkinName">
            <summary>
            皮肤文件名
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.SkinFolderExists">
            <summary>
            判断皮肤文件夹是否存在
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.SkinFileExists">
            <summary>
            判断皮肤文件是否存在
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.DefaultSkinFileExists">
            <summary>
            判断默认皮肤文件是否存在
            </summary>
        </member>
        <member name="P:Client.Web.TemplatedWebControl.DefaultSkinPath">
            <summary>
            默认皮肤文件路径
            </summary>
        </member>
        <member name="T:Client.Web.UrlManager.UrlCache">
            <summary>
            Summary description for UrlCache.
            </summary>
        </member>
        <member name="T:Client.Web.UrlManager.SiteUrlsData">
            <summary>
            Summary description for SiteUrlData.
            </summary>
        </member>
        <member name="P:Client.Web.UrlManager.SiteUrlsData.Paths">
            <summary>
            Property Paths (NameValueCollection)
            </summary>
        </member>
        <member name="P:Client.Web.UrlManager.SiteUrlsData.ReversePaths">
            <summary>
            Property Paths (NameValueCollection)
            </summary>
        </member>
        <member name="T:Client.Web.Style">
            <summary>
            Encapsulated rendering of style based on the selected skin.
            </summary>
        </member>
        <member name="P:Client.Web.Style.Href">
            <summary>
            Property Href (string)
            </summary>
        </member>
        <member name="E:Client.Web.Controls.BNButton.OnClick">
            <summary>
            鼠标单击事件
            </summary>
        </member>
        <member name="T:Client.Components.SkinnedControlWithPager">
            <summary>
            SkinnedControlWithPager 的摘要说明。
            </summary>
        </member>
        <member name="P:Client.Components.SkinnedControlWithPager.CountPages">
            <summary>
            是否需要计算总页数
            </summary>
        </member>
        <member name="T:Client.Web.State.CookieName">
            <summary>
            Cookie常用到的变量
            </summary>
        </member>
        <member name="P:Client.Web.State.CookieName.coName">
            <summary>
            参数Cookiename
            </summary>
        </member>
        <member name="P:Client.Web.State.CookieName.coDomain">
            <summary>
            域
            </summary>
        </member>
        <member name="P:Client.Web.State.CookieName.coPath">
            <summary>
            Cookie路径，默认是根路径
            </summary>
        </member>
        <member name="P:Client.Web.State.CookieName.coExpires">
            <summary>
            默认过期时间(分钟)
            </summary>
        </member>
        <member name="P:Client.Web.State.CookieName.coSecure">
            <summary>
            默认为非加密链接
            </summary>
        </member>
        <member name="P:Client.Web.State.CookieName.coKey">
            <summary>
            默认的CookieKey值
            </summary>
        </member>
        <member name="T:Client.Components.SFContext">
            <summary>
            The SFContext represents common properties and settings used through out of a Request. All data stored
            in the context will be cleared at the end of the request
            
            This object should be safe to use outside of a web request, but querystring and other values should be prepopulated
            
            Each SF thread must create an instance of the SFContext using one of the Three Create overloads. In some cases, 
            the CreateEmptyContext method may be used, but it is NOT recommended.
            </summary>
        </member>
        <member name="M:Client.Components.SFContext.Initialize(System.Collections.Specialized.NameValueCollection,System.Uri,System.String,System.String)">
            <summary>
            Create/Instatiate items that will vary based on where this object 
            is first created
            
            We could wire up Path, encoding, etc as necessary
            </summary>
        </member>
        <member name="M:Client.Components.SFContext.#ctor(System.Uri,System.String)">
            <summary>
            cntr called when no HttpContext is available
            </summary>
        </member>
        <member name="M:Client.Components.SFContext.#ctor(System.Web.HttpContext,System.Boolean)">
            <summary>
            cnst called when HttpContext is avaiable
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Client.Components.SFContext.CreateEmptyContext">
            <summary>
            Creates a empty context to be used for thread data storage. This instance of context will not be able to look up a SiteSettings or User.
            This method is NOT recommended since most of the API relies on a valid User and SiteSettings objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Components.SFContext.Create(System.Int32)">
            <summary>
            Creates a new context and sets the SiteSettings to the specific SettingsID. It's primary usage will be for background threads/tasks/offline.
            </summary>
            <param name="settingsID">Settings to look up and bind to.</param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.SFContext.Create(System.Web.HttpContext)">
            <summary>
            Creates a Context instance based on HttpContext. Generally, this
            method should be called via Begin_Request in an HttpModule
            </summary>
        </member>
        <member name="M:Client.Components.SFContext.Create(System.Web.HttpContext,System.Boolean)">
            <summary>
            Creates a Context instance based on HttpContext. Generally, this
            method should be called via Begin_Request in an HttpModule
            </summary>
        </member>
        <member name="M:Client.Components.SFContext.Create(System.Web.HttpContext,Client.Components.UrlReWriterDelegate)">
            <summary>
            On occasion, it may be necessary to use the SFContext during UrlRewriting. By default, it is generally not
            in the correct state and should not be accessed. The signature below will enable the SFContext to be created,
            saved (so it is available globally) and then perform the UrlRewritng via a delegate. 
            
            Except for QueryString values, the full SFContext should be availble during UrlRewriting.
            </summary>
            <param name="context"></param>
            <param name="rewriter"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.SFContext.Create(System.Uri,System.String)">
            <summary>
            Creates a Context instance based. If the HttpContext is available it will be used.
            Generally this method should be used when working with CS outside of a valid Web Request
            </summary>
        </member>
        <member name="M:Client.Components.SFContext.GetGuidFromQueryString(System.String)">
            <summary>
            Retrieves a value from the query string and returns it as an int.
            </summary>
        </member>
        <member name="M:Client.Components.SFContext.GetIntFromQueryString(System.String,System.Int32)">
            <summary>
            Retrieves a value from the query string and returns it as an int.
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.Items">
            <summary>
            Simulates Context.Items and provides a per request/instance storage bag
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.Item(System.String)">
            <summary>
            Provides direct access to the .Items property
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.QueryString">
            <summary>
            Allows access to QueryString values
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.IsWebRequest">
            <summary>
            Quick check to see if we have a valid web reqeust. Returns false if HttpContext == null
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.User">
            <summary>
            Return the current logged in User. This user value to be anonymous if no user is logged in.
            
            If this context is IsEmpty (ie, SiteSettings == null) then null will be returned by default. 
            
            This value can be set if necessary
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.SiteSettings">
            <summary>
            Settings for the current site. This by default, it will use the value found in this.SiteUrl. 
            
            This value is set by ID when using .Create(int settingsID). If IsEmpty == false, this method will
            return false unless the SiteSettings is explicitly set.
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.Config">
            <summary>
            Returnt the current configuration found in the communityserver.config file
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.SettingsID">
            <summary>
            Shortcut to SiteSettings.SettingsID. This proprty will return -1 if 
            the SiteSettings can not be found (or IsEmtpy == true)
            </summary>
        </member>
        <member name="P:Client.Components.SFContext.Current">
            <summary>
            Returns the current instance of the SFContext from the ThreadData Slot. If one is not found and a valid HttpContext can be found,
            it will be used. Otherwise, an exception will be thrown. 
            </summary>
        </member>
        <member name="M:Client.Components.OnlineUserState.AddOnlineUser(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            增加在线用户
            </summary>
            <param name="pageName">页面名</param>
            <param name="userID">用户ID</param>
            <param name="ip">用户IP</param>
        </member>
        <member name="M:Client.Components.OnlineUserState.UserIsOnline(System.String,System.Int32,System.String)">
            <summary>
            用户是否在线
            </summary>
            <param name="pageName">页面名</param>
            <param name="userID">用户ID</param>
            <param name="ip">用户IP</param>
        </member>
        <member name="M:Client.Components.OnlineUserState.GetPageOnlineUserCount(System.Int32)">
            <summary>
            获取某页面用户在线数
            </summary>
            <param name="pageName">页面名</param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.OnlineUserState.SetPageOnlineUserCount(System.Int32,System.Int32)">
            <summary>
            设计圈子在线总人数
            </summary>
            <param name="groupID">圈子ID</param>
            <param name="offset">偏移量</param>
        </member>
        <member name="M:Client.Components.OnlineUserState.UpdatePageOnlineUserList(System.String,System.Collections.Generic.SortedDictionary{System.String,Framework.Components.OnlineUserCacheInfo})">
            <summary>
            更新在线用户信息列表
            </summary>
            <param name="pageName">页面名</param>
            <param name="arr"></param>
        </member>
        <member name="M:Client.Components.OnlineUserState.GetPageOnlineUserList(System.String)">
            <summary>
            获取当前在线用户列表
            </summary>
            <param name="pageName">页面名</param>
            <returns></returns>
        </member>
        <member name="T:Client.Web.Script">
            <summary>
            Encapsulated rendering of script based on the selected skin.
            </summary>
        </member>
        <member name="T:Client.Web.ThumbnailMode">
            <summary>
            缩略图的方式
            </summary>
        </member>
        <member name="F:Client.Web.ThumbnailMode.HeightAndWidth">
            <summary>
            //指定高宽缩放（可能变形）
            </summary>
        </member>
        <member name="F:Client.Web.ThumbnailMode.AccordingWidth">
            <summary>
            //指定宽，高按比例     
            </summary>
        </member>
        <member name="F:Client.Web.ThumbnailMode.AccordingHeight">
            <summary>
            //指定高，宽按比例
            </summary>
        </member>
        <member name="F:Client.Web.ThumbnailMode.CutImage">
            <summary>
            指定高宽裁减（不变形） 
            </summary>
        </member>
        <member name="F:Client.Web.ThumbnailMode.SelfAdapting">
            <summary>
            宽高自适应
            </summary>
        </member>
        <member name="T:Client.Web.WatermarkPosition">
            <summary>
            水印位置
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.None">
            <summary>
            没有水印
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.TOP_LEFT">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.TOP_CENTER">
            <summary>
            上中
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.TOP_RIGHT">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.CENTER_RIGHT">
            <summary>
            右中
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.CENTER_CENTER">
            <summary>
            中中
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.CENTER_LEFT">
            <summary>
            左中
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.BOTTOM_LEFT">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.BOTTOM_CENTER">
            <summary>
            下中
            </summary>
        </member>
        <member name="F:Client.Web.WatermarkPosition.BOTTOM_RIGHT">
            <summary>
            右下
            </summary>
        </member>
        <member name="T:Client.Web.ImageHelper">
            <summary>
            图像裁剪辅助类
            </summary>
        </member>
        <member name="F:Client.Web.ImageHelper._PosX">
            <summary>
            如果从指定位置剪切时，X起始位置
            </summary>
        </member>
        <member name="F:Client.Web.ImageHelper._PosY">
            <summary>
            如果从指定位置剪切时，Y起始位置
            </summary>
        </member>
        <member name="M:Client.Web.ImageHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Client.Web.ImageHelper.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数 初始化生成图的宽高, 水印类型, 裁剪模式
            </summary>
            <param name="width">宽</param>
            <param name="height">高</param>
            <param name="type">水印类型</param>
            <param name="mode">裁剪模式</param>
        </member>
        <member name="M:Client.Web.ImageHelper.PicUpload(System.IO.Stream,System.String,System.String)">
            <summary>
            图片处理函数
            </summary>
            <param name="oriFile">原图片文件</param>
            <param name="extName">扩展名</param>
            <param name="imgName">生成后图片的名称</param>
            <returns>返回生成后图片的完整路径</returns>
        </member>
        <member name="M:Client.Web.ImageHelper.PicUpload(System.IO.Stream,System.String,System.String,System.String,System.String,Client.Web.WatermarkPosition)">
            <summary>
            图片处理函数
            </summary>
            <param name="oriFile">原图片文件</param>
            <param name="extName">扩展名</param>
            <param name="imgName">生成后图片的名称</param>
            <param name="waterImg">水印图存放路径</param>
            <param name="character">水印文字内容</param>
            <returns>返回生成后图片的完整路径</returns>
        </member>
        <member name="M:Client.Web.ImageHelper.MakeThumbnail(System.IO.Stream,System.String,System.Int32,System.Int32,System.String,System.String,Client.Web.WatermarkPosition,System.Int32,System.Int32)">
            <summary>
            生成缩略图
            </summary>
            <param name="orgFileStream">源图路径（物理路径）</param>
            <param name="targetFileName">缩略图路径（物理路径）</param>
            <param name="tarWidth">缩略图宽度</param>
            <param name="tarHeight">缩略图高度</param>
            <param name="rWidth">源图中截获一个矩形区域的宽度</param>
            <param name="rHeight">源图中截获一个矩形区域的宽度</param>
        </member>
        <member name="M:Client.Web.ImageHelper.SaveImage(System.Drawing.Bitmap,System.Int64,System.String)">
            <summary>
            保存图片。
            </summary>
            <param name="image">要保存的图片</param>
            <param name="quality">品质（1L~100L之间，数值越大品质越好）</param>
            <param name="filename">保存路径</param>
        </member>
        <member name="M:Client.Web.ImageHelper.CloneCover(System.Int32,System.Int32,System.String)">
            <summary>
            复制专辑封面图
            </summary>
            <param name="albumOriID">原专辑ID</param>
            <param name="albumNewID">新专辑ID</param>
            <param name="root">图片文件所在目录</param>
        </member>
        <member name="M:Client.Web.ImageHelper.CloneCover(System.Int32,System.Int32)">
            <summary>
            复制专辑封面图
            </summary>
            <param name="albumOriID">原专辑ID</param>
            <param name="albumNewID">新专辑ID</param>
        </member>
        <member name="M:Client.Web.ImageHelper.DeleteFile(System.String,System.Boolean)">
            <summary>
            删除文件
            </summary>
            <param name="path">路径</param>
            <param name="isMapPath"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.ImageHelper.AddWatermarkText(System.Drawing.Graphics@,System.Int32,System.Int32,System.String,Client.Web.WatermarkPosition)">
            <summary>
            添加水印文字到图片中
            </summary>
            <param name="picture"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="watermarkText"></param>
            <param name="position"></param>
        </member>
        <member name="M:Client.Web.ImageHelper.AddWatermarkText(System.Drawing.Graphics@,System.Int32,System.Int32,System.String,Client.Web.WatermarkPosition,System.Int32)">
            <summary>
            添加水印文字到图片中
            </summary>
            <param name="picture"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="watermarkText"></param>
            <param name="position"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:Client.Web.ImageHelper.AddWatermarkImage(System.Drawing.Graphics@,System.Int32,System.Int32,System.Drawing.Image,Client.Web.WatermarkPosition)">
            <summary>
            添加水印图片到图片中
            </summary>
            <param name="picture"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="watermark"></param>
            <param name="position"></param>
        </member>
        <member name="M:Client.Web.ImageHelper.GetUploadImageUrl(System.String,System.Int32,System.Int32)">
            <summary>
            格式化用户上传图片的全地址
            </summary>
            <param name="relurl"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.ImageHelper.GetUploadImageUrl(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            格式化用户上传图片的全地址
            </summary>
            <param name="relurl"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="P:Client.Web.ImageHelper.IsFillRect">
            <summary>
            是否完全填充整个图片的大小
            </summary>
        </member>
        <member name="P:Client.Web.ImageHelper.Root">
            <summary>
            上传图片的根目录
            </summary>
        </member>
        <member name="P:Client.Web.ImageHelper.WidthImage">
            <summary>
            缩略图默认宽度
            </summary>
        </member>
        <member name="P:Client.Web.ImageHelper.HeightImage">
            <summary>
            缩略图默认高度
            </summary>
        </member>
        <member name="P:Client.Web.ImageHelper.WType">
            <summary>
            水印类型
            </summary>
        </member>
        <member name="P:Client.Web.ImageHelper.CMode">
            <summary>
            缩略图裁减类型
            </summary>
        </member>
        <member name="P:Client.Web.ImageHelper.IsAllAddMarker">
            <summary>
            是否将所有的缩略图加水印，如果不是，则在WatermarkPosition不为None的情况下，只对最后一张加水印
            </summary>
        </member>
        <member name="P:Client.Web.ImageHelper.SizeList">
            <summary>
            多种尺寸压缩,如170X170
            </summary>
        </member>
        <member name="T:Client.Web.Controls.RepeaterExtTemp">
            <summary>
            An asp:Repeater control that lets you specify a template 
            to be displayed if there is no data in the repeater
            </summary>
            <remarks>
            Code taken from <see href="http://weblogs.asp.net/acampbell/archive/2004/06/19/159780.aspx">Alex 
            Campbell's blog.</see>
            </remarks>
        </member>
        <member name="M:Client.Web.Controls.RepeaterExtTemp.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)">
            <summary>
            When each item is created, this checks if the item is the
            FooterTemplate. If it is, and the number if items is zero
            (empty) then it adds the EmptyDataTemplate to the containting control.
            </summary>
            <param name="ea">E.</param>
        </member>
        <member name="P:Client.Web.Controls.RepeaterExtTemp.EmptyDataTemplate">
            <summary>
            Gets or sets the empty data template.  This contains controls 
            displayed when the repeater is bound to a datasource with no elements.
            </summary>
            <value></value>
        </member>
        <member name="T:Client.Web.Controls.EnumerateCheckboxList">
            <summary>
            通用的枚举类型复选列表
            </summary>
        </member>
        <member name="M:Client.Web.Controls.EnumerateCheckboxList.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Client.Web.Controls.EnumerateCheckboxList.InitItems(System.Type)">
            <summary>
            初始化下拉框
            </summary>
            <param name="enumType">枚举类型说明</param>
        </member>
        <member name="M:Client.Web.Controls.EnumerateCheckboxList.GetSelectedValues``1">
            <summary>
            读取枚举类型的值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Client.Web.Controls.EnumerateCheckboxList.SetSelectedValues``1(System.Collections.Generic.IList{``0})">
            <summary>
            设置枚举类型的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
        </member>
        <member name="T:Client.Web.Controls.EntityPropertyDropdownList">
            <summary>
            根据实体属性生成一个下拉列表
            </summary>
        </member>
        <member name="M:Client.Web.Controls.EntityPropertyDropdownList.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Client.Web.Controls.EntityPropertyDropdownList.InitItems(System.Type)">
            <summary>
            初始化下拉框
            </summary>
            <param name="enumType">枚举类型说明</param>
        </member>
        <member name="M:Client.Web.Controls.EntityPropertyDropdownList.GetSelectedValue(System.Type)">
            <summary>
            读取枚举类型的值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Client.Web.Controls.EntityPropertyDropdownList.SetSelectedValue(System.String)">
            <summary>
            设置枚举类型的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
        </member>
        <member name="T:Client.Components.SiteSettingsManager">
            <summary>
            Summary description for SiteSettingsManager.
            </summary>
        </member>
        <member name="M:Client.Components.SiteSettingsManager.GetSettingIDs">
            <summary>
            Provides safe access to a list of current SettingsIDs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Components.SiteSettingsManager.IterateSiteSettings(Client.Components.SiteSettingsListIterator)">
            <summary>
            Enables the interation of all current SiteSettings
            </summary>
            <param name="iter">Meth which takes a single parameter SettingsID</param>
        </member>
        <member name="M:Client.Components.SiteSettingsManager.GetSiteSettings(System.String)">
            <summary>
            Look up for a given SiteSettings by APplicationName. If not found in the cache, it will be
            retrieved from the data provider and cached.
            </summary>
        </member>
        <member name="M:Client.Components.SiteSettingsManager.GetSiteSettings(System.String,System.Boolean)">
            <summary>
            Look up for a given SiteSettings by APplicationName. If not found in the cache, it will be
            retrieved from the data provider and cached.
            </summary>
        </member>
        <member name="M:Client.Components.SiteSettingsManager.GetActiveSiteSettings">
            <summary>
            Returns a collection of SiteSettings which exist in the current Application Domain.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Components.SiteSettingsManager.AllSiteSettings">
            <summary>
            Returns all of the site settings in the datastore
            </summary>
            <returns></returns>
        </member>
        <member name="T:Client.Web.TextEditorLoader">
            <summary>
            Summary description for TextEditorLoader.
            </summary>
        </member>
        <member name="T:Client.Web.FileHelper">
            <summary>
            文件帮助类
            </summary>
        </member>
        <member name="M:Client.Web.FileHelper.CopyFile(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="from"></param>
            <param name="to"></param>
        </member>
        <member name="M:Client.Web.FileHelper.ResponseFile(System.String,System.String,System.String)">
            <summary>
            以指定的ContentType输出指定文件文件
            </summary>
            <param name="filepath">文件路径</param>
            <param name="filename">输出的文件名</param>
            <param name="filetype">将文件输出时设置的ContentType</param>
        </member>
        <member name="M:Client.Web.FileHelper.FindNoUTF8File(System.String)">
            <summary>
            返回指定目录下的非 UTF8 字符集文件
            </summary>
            <param name="Path">路径</param>
            <returns>文件名的字符串数组</returns>
        </member>
        <member name="M:Client.Web.FileHelper.IsUTF8(System.IO.FileStream)">
            <summary>
            判断文件流是否为UTF8字符集
            </summary>
            <param name="sbInputStream">文件流</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:Client.Web.FileHelper.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadFile(System.Web.UI.WebControls.FileUpload,System.String,System.String,System.String,System.Int32,System.String@)">
            <summary>
            文件上传
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="saveFileName">保存的文件名称</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadFile(System.Web.UI.WebControls.FileUpload,System.String,System.String,System.Int32,System.String@)">
            <summary>
            文件上传
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadImage(System.Web.UI.WebControls.FileUpload,System.String,System.String,System.Int32,System.String@)">
            <summary>
            上传图片
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadImage(System.Web.UI.WebControls.FileUpload,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            上传图片
            </summary>
            <param name="fileUpload">上传FileUpload控件</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="allowedWidth">允许宽度</param>
            <param name="allowedHeight">允许高度</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadFile(System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String,System.String,System.Int32,System.String@)">
            <summary>
            文件上传
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="saveFileName">保存的文件名称</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadFile(System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String,System.Int32,System.String@)">
            <summary>
            文件上传
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadImage(System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String,System.Int32,System.String@)">
            <summary>
            上传图片
            </summary>
            <param name="fileUpload">上传HtmlInputFile控件</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadImage(System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            上传图片
            </summary>
            <param name="fileUpload">上传FileUpload控件</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="allowedWidth">允许宽度</param>
            <param name="allowedHeight">允许高度</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadImageAndMakeThumbnail(System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            上传图片并生成缩略图
            </summary>
            <param name="fileUpload">上传FileUpload控件</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="thumbnailWidth">缩略图宽度</param>
            <param name="thumbnailHeight">缩略图高度</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadImageAndMakeThumbnail(System.Web.UI.HtmlControls.HtmlInputFile,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Client.Web.ThumbnailMode,System.String@)">
            <summary>
            上传图片并生成缩略图
            </summary>
            <param name="fileUpload">上传FileUpload控件</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="allowedWidth">允许图片宽度</param>
            <param name="allowedHeight">允许图片高度</param>
            <param name="thumbnailWidth">缩略图宽度</param>
            <param name="thumbnailHeight">缩略图高度</param>
            <param name="thumbnailMode">缩略类型</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadFile(System.Web.HttpPostedFile,System.String,System.String,System.String,System.Int32,System.String@)">
            <summary>
            文件上传
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="saveFileName">保存的文件名称</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadFile(System.Web.HttpPostedFile,System.String,System.String,System.Int32,System.String@)">
            <summary>
            文件上传
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadImage(System.Web.HttpPostedFile,System.String,System.String,System.Int32,System.String@)">
            <summary>
            上传图片
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.FileHelper.UploadImage(System.Web.HttpPostedFile,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
            上传图片
            </summary>
            <param name="fileUpload">上传FileUpload控件</param>
            <param name="saveFolderPath">保存文件的目录</param>
            <param name="fileTypes">允许上传文件类型 多个请用英文逗号隔开</param>
            <param name="allowedMaxSize">上传文件大小上限 单位：KB</param>
            <param name="allowedWidth">允许宽度</param>
            <param name="allowedHeight">允许高度</param>
            <param name="errors">错误信息</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.SortOrderDropDownList.#ctor">
            <summary>
            排序方向下拉列表
            </summary>
        </member>
        <member name="T:Client.Components.PassPortFactory">
            <summary>
            创建Passport
            </summary>
        </member>
        <member name="F:Client.Components.PassPortFactory.passport">
            <summary>
            单态实体
            </summary>
        </member>
        <member name="M:Client.Components.PassPortFactory.CreatePassPort">
            <summary>
            创建实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:Client.Web.BaseHtmlPage">
            <summary>
            HTML页面的基类
            </summary>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.GetPagination(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            获限分页html(有上一页下一页)
            </summary>
            <param name="currentPageIndex">当前页</param>
            <param name="pageSize">每页记录数</param>
            <param name="recordCount">总记录数</param>
            <param name="urlFormat">翻页的链接地址格式 如：http://www.9sky.com/music/artist.aspx?currentpage={0} </param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.GetPagination(System.Int32,System.Int32)">
            <summary>
            获限分页html(有上一页下一页)
            </summary>
            <param name="pageSize">每页记录数</param>
            <param name="recordCount">总记录数</param>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.AddMetaContentType">
            <summary>
            Adds the content-type meta tag to the header.
            </summary>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.AddMetaTag(System.String,System.String)">
            <summary>
            Add a meta tag to the page's header.
            </summary>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.AddGenericLink(System.String,System.String,System.String)">
            <summary>
            Adds the generic link to the header.
            </summary>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.AddCSSLink(System.String,System.String,System.String,System.Boolean)">
            <summary>
            添加CSS链接
            </summary>
            <param name="title">标题</param>
            <param name="href">路径</param>
            <param name="media">媒体</param>
            <param name="withoutAbsoluteUrl">相对地址</param>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.AddGenericLink(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Adds the generic link to the header.
            </summary>
            <param name="relation">关系：Stylesheet,Alternate,etc.</param>
            <param name="title">标题</param>
            <param name="href">路径</param>
            <param name="type">类型：text/css,text/html,text/xml等等</param>
            <param name="media">媒介</param>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.AddJavaScriptInclude(System.String)">
            <summary>
            Adds a JavaScript reference to the HTML head tag.
            </summary>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.AddJavaScriptInclude(System.String,System.Boolean)">
            <summary>
            添加脚本
            </summary>
            <param name="url">脚本地址</param>
            <param name="withoutAbsoluteUrl">相对地址</param>
        </member>
        <member name="M:Client.Web.BaseHtmlPage.AddJavaScriptInHead(System.String,System.Boolean)">
            <summary>
            向头部添加脚本
            </summary>
            <param name="url"></param>
            <param name="withoutAbsoluteUrl"></param>
        </member>
        <member name="P:Client.Web.BaseHtmlPage.Version">
            <summary>
            系统版本号
            </summary>
        </member>
        <member name="P:Client.Web.BaseHtmlPage.IsJQuery">
            <summary>
            是否在头加载jquery.js文件
            </summary>
        </member>
        <member name="P:Client.Web.BaseHtmlPage.CurrentPageIndex">
            <summary>
            当前页码
            </summary>
        </member>
        <member name="T:Client.Web.UserLink">
            <summary>
            在线人员的组相关联项
            --------------------
            创建:谢月甲,20080507
            </summary>
        </member>
        <member name="T:Client.Web.Controls.EnumerateRadioButtonList">
            <summary>
            通用的枚举类型选择下拉框
            </summary>
        </member>
        <member name="M:Client.Web.Controls.EnumerateRadioButtonList.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Client.Web.Controls.EnumerateRadioButtonList.InitItems(System.Type)">
            <summary>
            初始化下拉框
            </summary>
            <param name="enumType">枚举类型说明</param>
        </member>
        <member name="M:Client.Web.Controls.EnumerateRadioButtonList.GetSelectedValue``1">
            <summary>
            读取枚举类型的值
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Client.Web.Controls.EnumerateRadioButtonList.SetSelectedValue``1(``0)">
            <summary>
            设置枚举类型的值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
        </member>
        <member name="T:Client.Web.BaseAjaxPage">
            <summary>
            Ajax页面的基类
            </summary>
        </member>
        <member name="T:Client.Web.OnlineHelper">
            <summary>
            在线管理助手
            ------------------
            创建:谢月甲,20080410
            </summary>
        </member>
        <member name="F:Client.Web.OnlineHelper.DefalutMaxUsers">
            <summary>
            最大在线用户数
            </summary>
        </member>
        <member name="M:Client.Web.OnlineHelper.IsOnline(System.String,System.Int32)">
            <summary>
            某一个人是否在一个组里
            </summary>
            <param name="groupKey">组关键字</param>
            <param name="userID">用户ID</param>
        </member>
        <member name="M:Client.Web.OnlineHelper.Add(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            添加一个在线人员
            </summary>
        </member>
        <member name="M:Client.Web.OnlineHelper.Remove(System.String,System.Int32)">
            <summary>
            在一个组里移除一个在线人员
            </summary>
            <param name="groupKey">组关键字</param>
            <param name="userID">用户ID</param>
        </member>
        <member name="M:Client.Web.OnlineHelper.Remove(System.Int32)">
            <summary>
            在所有组里移除一个在线人员
            </summary>
            <param name="userID">用户ID</param>
        </member>
        <member name="M:Client.Web.OnlineHelper.GetOnlineList(System.String)">
            <summary>
            获取在线人员列表
            </summary>
            <param name="groupKey">组关键字</param>
        </member>
        <member name="M:Client.Web.OnlineHelper.GetOnlineList(System.String,System.Int32)">
            <summary>
            获取在线人员列表
            </summary>
            <param name="groupKey">组关键字</param>
            <param name="topNum">前几位</param>
        </member>
        <member name="M:Client.Web.OnlineHelper.GetOnlineCount(System.String)">
            <summary>
            获取某一个组的在线人数
            </summary>
            <param name="groupKey">组关键字</param>
        </member>
        <member name="M:Client.Web.CHttpModule.Init(System.Web.HttpApplication)">
            <summary>
            应用程序初始化
            </summary>
            <param name="application"></param>
        </member>
        <member name="M:Client.Web.CHttpModule.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:Client.Web.CHttpModule.WriteError(System.Web.HttpResponse,System.Web.HttpRequest,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="response"></param>
            <param name="request"></param>
            <param name="file"></param>
            <param name="message"></param>
        </member>
        <member name="M:Client.Web.CHttpModule.CreateWebContext(System.Web.HttpContext)">
            <summary>
            创建应用程序上下文
            by venjiang 2005/04/07
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Client.Web.AspNetPager">
             <summary>
             用于ASP.NET Web应用程序中对数据进行分页的的服务器控件。
             </summary>
             <remarks>不同于DataGrid控件，AspNetPager分页控件本身并不显示任何数据，而只显示页导航元素，数据在页面上的显示方式与该控件无关。该控件可以为DataGrid、DataList、Repeater以及自定义控件进行分页，配合Sql存储过程，分页性能较使用DataGrid分页有明显提升，尤其是当数据量大时性能可提升数倍！
             <p>AspNetPager 2.0 中新增了通过Url来分页的功能，这使得访问者可以直接输入相应的Url来访问任何页面，并且搜索引擎也可以直接检索每个页面，若使用DataGrid的分页功能，这是无法实现的。</p>
             <p>要使用 AspNetPager 分页控件，必须最少指定它的 <see cref="P:Client.Web.AspNetPager.RecordCount"/> 属性，指定并编写 <see cref="E:Client.Web.AspNetPager.PageChanged"/> 事件的处理程序。
             <see cref="P:Client.Web.AspNetPager.RecordCount"/> 属性指定要分页的所有数据的总项数，若未指定该值或该值小于等于 <see cref="P:Client.Web.AspNetPager.PageSize"/> ，则AspNetPager控件不会显示任何内容。
             若未指定并编写 <see cref="E:Client.Web.AspNetPager.PageChanged"/> 事件处理程序，则当用户点击页导航元素或在页索引文本框中手式输入页索引并提交时AspNetPager不会跳转到指定的页。
             AspNetPager控件的分页方法和DataGrid基本相同，即在它的 <see cref="E:Client.Web.AspNetPager.PageChanged"/> 事件处理程序中将传递事件数据的 <see cref="T:Client.Web.PageChangedEventArgs"/> 的 <see cref="P:Client.Web.PageChangedEventArgs.NewPageIndex"/>值赋给 AspNetPager的 <see cref="P:Client.Web.AspNetPager.CurrentPageIndex"/>属性，然后重新将新的数据与数据显示控件绑定。 </p></remarks>
             <example>以下示例说明如何用AspNetPager对DataGrid进行分页。
             <code><![CDATA[
            <%@ Page Language="C#"%>
            <%@ Import Namespace="System.Data"%>
            <%@Import Namespace="System.Data.SqlClient"%>
            <%@Import Namespace="System.Configuration"%>
            <%@Register TagPrefix="Webdiyer" Namespace="Wuqi.Webdiyer" Assembly="aspnetpager"%>
            <HTML>
            <HEAD>
            <TITLE>Welcome to Webdiyer.com </TITLE>
              <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("GetNews",conn);
            				cmd.CommandType=CommandType.StoredProcedure;
            				cmd.Parameters.Add("@pageindex",1);
            				cmd.Parameters.Add("@pagesize",1);
            				cmd.Parameters.Add("@docount",true);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			cmd.Parameters.Add("@docount",false);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            			pager.CustomInfoText="记录总数：<font color=\"blue\"><b>"+pager.RecordCount.ToString()+"</b></font>";
            			pager.CustomInfoText+=" 总页数：<font color=\"blue\"><b>"+pager.PageCount.ToString()+"</b></font>";
            			pager.CustomInfoText+=" 当前页：<font color=\"red\"><b>"+pager.CurrentPageIndex.ToString()+"</b></font>";
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
              </script>
                 <meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Webdiyer(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:DataGrid id="dataGrid1" runat="server" />
            
            			<Webdiyer:AspNetPager id="pager" 
            			runat="server" 
            			PageSize="8" 
            			NumericButtonCount="8" 
            			ShowCustomInfoSection="left" 
            			PagingButtonSpacing="0"
            			ShowInputBox="always" 
            			CssClass="mypager" 
            			HorizontalAlign="right" 
            			OnPageChanged="ChangePage"  
            			SubmitButtonText="转到" 
            			NumericButtonTextFormatString="[{0}]"/>
            
            		</form>
            	</body>
            </HTML>
             ]]>
             </code>
             <p>下面是该示例所用的Sql Server存储过程：</p>
             <code>
             <![CDATA[
            CREATE procedure GetNews
             	(@pagesize int,
            		@pageindex int,
            		@docount bit)
            		as
            		set nocount on
            		if(@docount=1)
            		select count(id) from news
            		else
            		begin
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.source,O.title,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		end
            		set nocount off
            GO
             ]]>
             </code></example>
        </member>
        <member name="M:Client.Web.AspNetPager.OnLoad(System.EventArgs)">
            <summary>
            重写 <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> 方法。
            </summary>
            <param name="e">包含事件数据的 <see cref="T:System.EventArgs"/> 对象。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.OnPreRender(System.EventArgs)">
            <summary>
            重写<see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/>方法。
            </summary>
            <param name="e">包含事件数据的 <see cref="T:System.EventArgs"/> 对象。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写<see cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)"/> 方法，将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 中
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Client.Web.AspNetPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)"/> 方法，将 <see cref="T:Client.Web.AspNetPager"/> 控件的 HTML 开始标记输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)"/> 方法，将 <see cref="T:Client.Web.AspNetPager"/> 控件的 HTML 结束标记输出到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写 <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)"/> 方法，将控件的内容呈现到指定 <see cref="T:System.Web.UI.HtmlTextWriter"/> 的编写器中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.GetStyleString">
            <summary>
            将基控件的Style转换为CSS字符串。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Web.AspNetPager.WriteCellAttributes(System.Web.UI.HtmlTextWriter,System.Boolean)">
            <summary>
            为用户自定义信息区和页导航按钮区和td添加属性。
            </summary>
            <param name="writer"></param>
            <param name="leftCell">是否为第一个td</param>
        </member>
        <member name="M:Client.Web.AspNetPager.GetHrefString(System.Int32)">
            <summary>
            获取分页导航按钮的超链接字符串。
            </summary>
            <param name="pageIndex">该分页按钮相对应的页索引。</param>
            <returns>分页导航按钮的超链接字符串。</returns>
        </member>
        <member name="M:Client.Web.AspNetPager.BuildUrlString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            当使用Url分页方式时，在当前Url上加入分页参数，若该参数存在，则改变其值。
            </summary>
            <param name="col">要加入到新Url中的参数名和值的集合。</param>
            <returns>分页导航按钮的超链接字符串，包括分页参数。</returns>
        </member>
        <member name="M:Client.Web.AspNetPager.CreateNavigationButton(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            创建第一页、上一页、下一页及最后一页分页按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="btnname">分页按钮名。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.WriteCssClass(System.Web.UI.HtmlTextWriter)">
            <summary>
            写入CSS类名。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.AddToolTip(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            加入导航按钮提示文本。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="pageIndex">导航按钮对应的页索引。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.CreateNumericButton(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            创建分页数值导航按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="index">要创建按钮的页索引的值。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.WriteButtonSpace(System.Web.UI.HtmlTextWriter)">
            <summary>
            在分页导航元素间加入空格。
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Client.Web.AspNetPager.GetChinesePageIndex(System.Int32)">
            <summary>
            获取中文页索引字符。
            </summary>
            <param name="index">中文字符对应的页索引数值</param>
            <returns>对应于页索引数值的中文字符</returns>
        </member>
        <member name="M:Client.Web.AspNetPager.CreateNumericImages(System.Web.UI.HtmlTextWriter,System.Int32,System.Boolean)">
            <summary>
            创建页索引图片按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="index">页索引数值。</param>
            <param name="isCurrent">是否是当前页索引。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.CreateMoreButton(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            创建“更多页”（...）按钮。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
            <param name="pageIndex">链接到按钮的页的索引。</param>
        </member>
        <member name="M:Client.Web.AspNetPager.RaisePostBackEvent(System.String)">
            <summary>
            实现<see cref="T:System.Web.UI.IPostBackEventHandler"/> 接口，使 <see cref="T:Client.Web.AspNetPager"/> 控件能够处理将窗体发送到服务器时引发的事件。
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Client.Web.AspNetPager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            实现 <see cref="T:System.Web.UI.IPostBackDataHandler"/> 接口，为 <see cref="T:Client.Web.AspNetPager"/> 服务器控件处理回发数据。
            </summary>
            <param name="pkey">控件的主要标识符。</param>
            <param name="pcol">所有传入名称值的集合。</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.AspNetPager.RaisePostDataChangedEvent">
            <summary>
            实现 <see cref="T:System.Web.UI.IPostBackDataHandler"/> 接口，用信号要求服务器控件对象通知 ASP.NET 应用程序该控件的状态已更改。
            </summary>
        </member>
        <member name="M:Client.Web.AspNetPager.OnPageChanged(Client.Web.PageChangedEventArgs)">
            <summary>
            引发 <see cref="E:Client.Web.AspNetPager.PageChanged"/> 事件。这使您可以为事件提供自定义处理程序。
            </summary>
            <param name="e">一个 <see cref="T:Client.Web.PageChangedEventArgs"/>，它包含事件数据。</param>
        </member>
        <member name="P:Client.Web.AspNetPager.ShowNavigationToolTip">
            <summary>
            获取或设置一个值，该值批示当鼠标指针悬停在导航按钮上时是否显示工具提示。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.NavigationToolTipTextFormatString">
            <summary>
            获取或设置导航按钮工具提示文本的格式。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ChinesePageIndex">
            <summary>
            获取或设置一个值，该值指示是否将页索引按钮用中文数字代替。
            </summary>
            <remarks>
            将该值设为true并且未使用图片按钮时，页索引按钮中的数值1、2、3等将会被中文字符一、二、三等代替。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.NumericButtonTextFormatString">
            <summary>
            获取或设置页索引数值导航按钮上文字的显示格式。
            </summary>
            <value>
            字符串，指定页索引数值按钮上文字的显示格式，默认值为<see cref="F:System.String.Empty"/>，即未设置该属性。</value>
            <remarks>
            使用NumericButtonTextFormatString属性指定页索引数值按钮的显示格式，如未设置该值时索引按钮文本将会是：1 2 3 ...，设置该值将改变索引按钮文本的显示格式，
            如将该值设为“[{0}]”则索引文本会显示为：[1] [2] [3] ...，将该值设为“-{0}-”则会使索引文本变为：-1- -2- -3- ...。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.PagingButtonType">
            <summary>
            获取或设置分页导航按钮的类型，即使用文字还是图片。
            </summary>
            <remarks>
            要使用图片按钮，您需要准备以下图片：从0到9的十个数值图片（当ShowPageIndex设为true时），第一页、上一页、下一页、最后一页及更多页（...）五个按钮图片（当ShowFirstLast及ShowPrevNext都设为true时），
            若需要使当前页索引的数值按钮不同于别的页索引数值按钮，则还需准备当前页索引的按钮图片；
            若需要使已禁用的第一页、上一页、下一页及最后一页按钮图片不同于正常的按钮图片，则还需准备这四个按钮在禁用状态下的图片；
            <p><b>图片文件的命名规则如下：</b></p>
            <p>从0到9十张数值按钮图片必须命名为“数值+ButtonImageNameExtension+ButtonImageExtension”，其中的ButtonImageNameExtension可以不用设置，
            ButtonImageExtension是图片文件的后缀名，如 .gif或 .jpg等可以在浏览器中显示的任何图片文件类型。如页索引“1”的图片文件可命名为“1.gif”或“1.jpg”，
            当您有两套或更多套图片文件时，可以通过指定ButtonImageNameExtension属性值来区分不同套的图片，如第一套图片可以不用设ButtonImageNameExtension，则图片文件名类似于“1.gif”、“2.gif”等等，而第二套图片则设置ButtonImageNameExtension为“f”，图片文件名类似于“1f.gif”，“2f.gif”等等。</p>
            <p>第一页按钮的图片文件名以“first”开头，上一页按钮图片名以“prev”开头，下一页按钮图片名以“next”开头，最后一页按钮图片名以“last”开头，更多页按钮图片名以“more”开头，是否使用ButtonImageNameExtension取决于数值按钮的设置及是否有更多套图片。</p>
            </remarks>
            <example>
            以下代码片段示例如果使用图片按钮：
            <p>
            <code><![CDATA[
            <Webdiyer:AspNetPager runat="server" 
            	id="pager1" 
            	OnPageChanged="ChangePage"  
            	PagingButtonType="image" 
            	ImagePath="images" 
            	ButtonImageNameExtension="n" 
            	DisabledButtonImageNameExtension="g" 
            	ButtonImageExtension="gif" 
            	CpiButtonImageNameExtension="r" 
            	PagingButtonSpacing=5/>
            ]]>
            </code>
            </p>
            </example>
        </member>
        <member name="P:Client.Web.AspNetPager.NumericButtonType">
            <summary>
            获取或设置页导航数值按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image当又不想让页索引数值按钮使用图片时，可以将该值设为Text，这会使页索引数据按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.NavigationButtonType">
            <summary>
            获取或设置第一页、上一页、下一页和最后一页按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image但又不想让第一页、下一页、下一页和最后一页按钮使用图片，则可以将该值设为Text，这会使前面的四个按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.MoreButtonType">
            <summary>
            获取或设置“更多页”（...）按钮的类型，该值仅当PagingButtonType设为Image时才有效。
            </summary>
            <remarks>
            当您将PagingButtonType设为Image但又不想让更多页（...）按钮使用图片时，可以将此值设为Text，这会使更多页按钮使用文本而不是图片按钮。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.PagingButtonSpacing">
            <summary>
            获取或设置分页导航按钮之间的间距。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ShowFirstLast">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示第一页和最后一页按钮。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ShowPrevNext">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示上一页和下一页按钮。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ShowPageIndex">
            <summary>
            获取或设置一个值，该值指示是否在页导航元素中显示页索引数值按钮。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.FirstPageText">
            <summary>
            获取或设置为第一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.PrevPageText">
            <summary>
            获取或设置为上一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.NextPageText">
            <summary>
            获取或设置为下一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.LastPageText">
            <summary>
            获取或设置为最后一页按钮显示的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.NumericButtonCount">
            <summary>
            获取或设置在 <see cref="T:Client.Web.AspNetPager"/> 控件的页导航元素中同时显示的数值按钮的数目。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ShowDisabledButtons">
            <summary>
            获取或设置一个值，该值指定是否显示已禁用的按钮。
            </summary>
            <remarks>
            该值用来指定是否显示已禁用的分页导航按钮，当当前页为第一页时，第一页和上一页按钮将被禁用，当当前页为最后一页时，下一页和最后一页按钮将被禁用，被禁用的按钮没有链接，在按钮上点击也不会有任何作用。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.ImagePath">
            <summary>
            获取或设置当使用图片按钮时，图片文件的路径。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ButtonImageExtension">
            <summary>
            获取或设置当使用图片按钮时，图片的类型，如gif或jpg，该值即图片文件的后缀名。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ButtonImageNameExtension">
            <summary>
            获取或设置自定义图片文件名的后缀字符串，以区分不同类型的按钮图片。
            </summary>
            <remarks><note>注意：</note>该值不是文件后缀名，而是为区分不同的图片文件而在图片名中加入的字符串，如：
            当前有两套按钮图片，其中一套中的“1”的图片名可为“1f.gif”，另一套中的“1”的图片名可起为“1n.gif”，其中的f和n即为ButtonImageNameExtension。</remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.CpiButtonImageNameExtension">
            <summary>
            获取或设置当前页索引按钮的图片名后缀。
            </summary>
            <remarks>
            当 <see cref="P:Client.Web.AspNetPager.PagingButtonType"/> 设为 Image 时，该属性允许您设置当前页索引数值按钮使用的图片名后缀字符，因此可以使当前页索引按钮与其它页索引按钮使用不同的图片，若未设置该值，则默认值为<see cref="P:Client.Web.AspNetPager.ButtonImageNameExtension"/>，即当前页索引按钮与其它页索引按钮使用相同的图片。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.DisabledButtonImageNameExtension">
            <summary>
            获取或设置已禁用的页导航按钮图片名后缀字符串。
            </summary>
            <remarks>
            当 <see cref="P:Client.Web.AspNetPager.PagingButtonType"/> 设为 Image 时， 该值允许您设置已禁用（即没有链接，因而点击后无反应）的页导航按钮（包括第一页、上一页、下一页、最后一页四个按钮）的图片文件名后缀字符串，因此可以使已禁用的页导航按钮不同于正常的页导航按钮。若未设置该值，则默认值为<see cref="P:Client.Web.AspNetPager.ButtonImageNameExtension"/>，即已禁用的页导航按钮与正常的页导航按钮使用相同的图片。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.ButtonImageAlign">
            <summary>
            指定当使用图片按钮时，图片的对齐方式。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.UrlPaging">
             <summary>
             获取或设置是否启用url来传递分页信息。
             </summary>
             <remarks>
             启用Url分页方式是将用户欲访问的页索引通过Url来传递，由于该分页方式不使用页面向自身回发来传递数据，
             所以每次分页时所有的数据都恢复为初始值或需要重新获取。使用Url分页方式不支持动态改变分页控件的属性值，
             因暂时无法将新的属性值通过Url来传递给下一页。
             </remarks>
             <example>以下示例说明如何用AspNetPager的Url分页方式对DataGrid进行分页（使用Access数据库）：
             <code><![CDATA[
            <%@Register TagPrefix="Webdiyer" Namespace="Wuqi.Webdiyer" Assembly="aspnetpager"%>
            <%@Import Namespace="System.Data.OleDb"%>
            <%@ Import Namespace="System.Data"%>
            <%@ Page Language="C#" debug=true%>
            <HTML>
            	<HEAD>
            		<TITLE>Welcome to Webdiyer.com </TITLE>
            		<script runat="server">
            		OleDbConnection conn;
            		OleDbCommand cmd;
            		void Page_Load(object src,EventArgs e){
            		conn=new OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0;Data Source="+Server.MapPath("access/aspnetpager.mdb"));
            		if(!Page.IsPostBack){
            		cmd=new OleDbCommand("select count(newsid) from wqnews",conn);
            		conn.Open();
            		pager.RecordCount=(int)cmd.ExecuteScalar();
            		conn.Close();
            		BindData();
            		}
            		}
            
            		void BindData(){
            		cmd=new OleDbCommand("select newsid,heading,source,addtime from wqnews order by addtime desc",conn);
            		OleDbDataAdapter adapter=new OleDbDataAdapter(cmd);
            		DataSet ds=new DataSet();
            		adapter.Fill(ds,pager.PageSize*(pager.CurrentPageIndex-1),pager.PageSize,"news");
            		dg.DataSource=ds.Tables["news"];
            		dg.DataBind();
            		}
            
            		void ChangePage(object src,PageChangedEventArgs e){
            		pager.CurrentPageIndex=e.NewPageIndex;
            		BindData();
            		}
            
            		</script>
            		<meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Webdiyer(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<h2 align="center">AspNetPager分页示例</h2>
            			<asp:DataGrid id="dg" runat="server" 
            			Width="760" CellPadding="4" Align="center" />
            			
            			<Webdiyer:AspNetPager runat="server" id="pager" 
            			OnPageChanged="ChangePage" 
            			HorizontalAlign="center" 
            			style="MARGIN-TOP:10px;FONT-SIZE:16px" 
            			PageSize="8" 
            			ShowInputBox="always" 
            			SubmitButtonStyle="border:1px solid #000066;height:20px;width:30px" 
            			InputBoxStyle="border:1px #0000FF solid;text-align:center" 
            			SubmitButtonText="转到" 
            			UrlPaging="true" 
            			UrlPageIndexName="pageindex" />
            		</form>
            	</body>
            </HTML>
             ]]></code>
             </example>
        </member>
        <member name="P:Client.Web.AspNetPager.UrlPageIndexName">
            <summary>
            获取或设置当启用Url分页方式时，在url中表示要传递的页索引的参数的名称。
            </summary>
            <remarks>
            该属性允许您自定义通过Url传递页索引时表示要传递的页索引的参数的名称，以避免与现有的参数名重复。
            <p>该属性的默认值是“page”，即通过Url分页时，显示在浏览器地址栏中的Url类似于：</p>http://www.webdiyer.com/aspnetpager/samples/datagrid_url.aspx?page=2 
            <p>如将该值改为“pageindex”，则上面的Url将变为：</p><p>http://www.webdiyer.com/aspnetpager/samples/datagrid_url.aspx?pageindex=2 </p>
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.CurrentPageIndex">
             <summary>
             获取或设置当前显示页的索引。
             </summary>
            <remarks>使用此属性来确定在 AspNetPager 控件中当前显示的页，当前显示的页的数字索引将以红色字体加粗显示。此属性还用于以编程的方式控制所显示的页。
            <p>　<b>注意：</b>不同于DataGrid控件的CurrentPageIndex，AspNetPager的CurrentPageIndex属性是从1开始的。</p></remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.RecordCount">
             <summary>
             获取或设置需要分页的所有记录的总数。
             </summary>
             <remarks>
             当页面第一次加载时，应以编程方式将从存储过程或Sql语句中返回的数据表中所有要分页的记录的总数赋予该属性，AspNetPager会将其保存的ViewState中并在页面回发时从ViewState中获取该值，因此避免了每次分页都要访问数据库而影响分页性能。AspNetPager根据要分页的所有数据的总项数和 <see cref="P:Client.Web.AspNetPager.PageSize"/> 属性来计算显示所有数据需要的总页数，即 <see cref="P:Client.Web.AspNetPager.PageCount"/>的值。
             </remarks>
             <example>
             下面的示例显示如何以编程方式将从Sql语句返回的记录总数赋给该属性：
             <p>
             <code><![CDATA[
             <HTML>
             <HEAD>
             <TITLE>Welcome to Webdiyer.com </TITLE>
             <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("select count(id) from news",conn);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetPagedNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
            		</script>
            		<meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Webdiyer(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:DataGrid id="dataGrid1" runat="server" />
            
            			<Webdiyer:AspNetPager id="pager" runat="server" 
            			PageSize="8" 
            			NumericButtonCount="8" 
            			ShowCustomInfoSection="before" 
            			ShowInputBox="always" 
            			CssClass="mypager" 
            			HorizontalAlign="center" 
            			OnPageChanged="ChangePage" />
            
            		</form>
            	</body>
            </HTML>
             ]]>
             </code></p>
             <p>本示例使用的存储过程代码如下：</p>
             <code><![CDATA[
            CREATE procedure GetPagedNews
            		(@pagesize int,
            		@pageindex int)
            		as
            		set nocount on
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.title,O.source,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		set nocount off
            GO
             ]]>
             </code>
             </example>
        </member>
        <member name="P:Client.Web.AspNetPager.PagesRemain">
            <summary>
            获取当前页之后未显示的页的总数。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.PageSize">
            <summary>
            获取或设置每页显示的项数。
            </summary>
            <remarks>
            该值获取或设置数据呈现控件每次要显示数据表中的的数据的项数，AspNetPager根据该值和 <see cref="P:Client.Web.AspNetPager.RecordCount"/> 来计算显示所有数据需要的总页数，即 <see cref="P:Client.Web.AspNetPager.PageCount"/>的值。</remarks>
            <example>以下示例将 <see cref="T:Client.Web.AspNetPager"/> 设置为允许每页显示8条数据：
            <code>
            <![CDATA[
             ...
             <Webdiyer:AspNetPager id="pager" runat="server" PageSize=8 OnPageChanged="ChangePage"/>
             ...
            ]]></code></example>
        </member>
        <member name="P:Client.Web.AspNetPager.RecordsRemain">
            <summary>
            获取在当前页之后还未显示的剩余记录的项数。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.PageCount">
            <summary>
            获取所有要分页的记录需要的总页数。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ShowInputBox">
             <summary>
             获取或设置页索引文本框的显示方式。
             </summary>
             <remarks>
             页索引文件框允许用户手式输入要访问的页的索引，当页数非常多时，显示页索引文本框非常方便用户跳转到指定的页，默认情况下，该文本框只有在总页数大于或等于 <see cref="P:Client.Web.AspNetPager.ShowBoxThreshold"/> 的值时才显示，否则不显示，要想该文本框任何时候都显示，请将其值设为Always，若希望任何时候都不显示，则应设为Never。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.InputBoxClass">
            <summary>
            获取或设置应用于页索引输入文本框的CSS类名。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.InputBoxStyle">
            <summary>
            获取或设置页索引输入文本框的CSS样式文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.TextBeforeInputBox">
            <summary>
            获取或设置页索引页索引输入文本框前的文本字符串值。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.TextAfterInputBox">
            <summary>
            获取或设置页索引文本输入框后的文本内容字符串值。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.SubmitButtonText">
            <summary>
            获取或设置提交按钮上的文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.SubmitButtonClass">
            <summary>
            获取或设置应用于提交按钮的CSS类名。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.SubmitButtonStyle">
            <summary>
            获取或设置应用于提交按钮的CSS样式。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.ShowBoxThreshold">
            <summary>
            获取或设置自动显示页索引输入文本框的最低起始页数。
            </summary>
            <remarks>
            当 <see cref="P:Client.Web.AspNetPager.ShowInputBox"/> 设为Auto（默认）并且要分页的数据的总页数达到该值时会自动显示页索引输入文本框，默认值为30。该选项当 <see cref="P:Client.Web.AspNetPager.ShowInputBox"/> 设为Never或Always时没有任何作用。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.ShowCustomInfoSection">
            <summary>
            获取或设置显示用户自定义信息区的方式。
            </summary>
            <remarks>
            该属性值设为Left或Right时会在分页导航元素左边或右边划出一个专门的区域来显示有关用户自定义信息，设为Never时不显示。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.CustomInfoTextAlign">
            <summary>
            获取或设置用户自定义信息区文本的对齐方式。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.CustomInfoSectionWidth">
            <summary>
            获取或设置用户自定义信息区的宽度。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.CustomInfoClass">
            <summary>
            获取或设置应用于用户自定义信息区的级联样式表类名。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.CustomInfoStyle">
            <summary>
            获取或设置应用于用户自定义信息区的CSS样式文本。
            </summary>
            <value>字符串值，要应用于用户自定义信息区的CSS样式文本。</value>
        </member>
        <member name="P:Client.Web.AspNetPager.CustomInfoText">
            <summary>
            获取或设置在显示在用户自定义信息区的用户自定义文本。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.AlwaysShow">
            <summary>
            获取或设置一个值，该值指定是否总是显示AspNetPager分页按件，即使要分页的数据只有一页。
            </summary>
            <remarks>
            默认情况下，当要分页的数据小于两页时，AspNetPager不会在页面上显示任何内容，将此属性值设为true时，即使总页数只有一页，AspNetPager也将显示分页导航元素。
            </remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.CssClass">
            <summary>
            获取或设置由 AspNetPager 服务器控件在客户端呈现的级联样式表 (CSS) 类。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.CurrentPageButtonClass">
            <summary>
            当前索引的css 名称
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.EnableViewState">
            <summary>
            获取或设置一个值，该值指示 AspNetPager 服务器控件是否向发出请求的客户端保持自己的视图状态，该属性经重写后不允许设为false。
            </summary>
            <remarks><see cref="T:Client.Web.AspNetPager"/> 服务器控件将一些重要的分页信息保存在ViewState中，当使用Url分页方式时，虽然视图状态在分页过程中没有任何作用，但若当前页需要回发，则必须启用视图状态以便分页控件能在页面回发后获取回发前的分页状态；当通过页面回发（PostBack）的方式来分页时，要使AspNetPager正常工作，必须启用视图状态。
            <p><note>该属性并不能禁止用户用<![CDATA[<%@Page EnableViewState=false%> ]]>页指令来禁用整个页面的视图状态，当使用此指令并且设置AspNetPager通过页面回发来分页时，AspNetPager因为无法获取保存的信息而不能正常工作。</note></p></remarks>
        </member>
        <member name="P:Client.Web.AspNetPager.PageIndexOutOfRangeErrorString">
            <summary>
            获取或设置当用户输入的页索引超出范围（大于最大页索引或小于最小页索引）时在客户端显示的错误信息。
            </summary>
        </member>
        <member name="P:Client.Web.AspNetPager.InvalidPageIndexErrorString">
            <summary>
            获取或设置当用户输入无效的页索引（负值或非数字）时在客户端显示的错误信息。
            </summary>
        </member>
        <member name="E:Client.Web.AspNetPager.PageChanged">
             <summary>
             当页导航元素之一被单击或用户手工输入页索引提交时发生。
             </summary>
             <example>下面的示例显示如何为PageChanged事件指定和编写事件处理程序，在该事件处理程序中重新绑定DataGrid上显示的数据：
             <code><![CDATA[
            <%@ Page Language="C#"%>
            <%@ Import Namespace="System.Data"%>
            <%@Import Namespace="System.Data.SqlClient"%>
            <%@Import Namespace="System.Configuration"%>
            <%@Register TagPrefix="Webdiyer" Namespace="Wuqi.Webdiyer" Assembly="aspnetpager"%>
            <HTML>
            <HEAD>
            <TITLE>Welcome to Webdiyer.com </TITLE>
              <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("GetNews",conn);
            				cmd.CommandType=CommandType.StoredProcedure;
            				cmd.Parameters.Add("@pageindex",1);
            				cmd.Parameters.Add("@pagesize",1);
            				cmd.Parameters.Add("@docount",true);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			cmd.Parameters.Add("@docount",false);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
              </script>
                 <meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Webdiyer(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:DataGrid id="dataGrid1" runat="server" />
            			<Webdiyer:AspNetPager id="pager" runat="server" PageSize="8" NumericButtonCount="8" ShowCustomInfoSection="before" ShowInputBox="always" CssClass="mypager" HorizontalAlign="center" OnPageChanged="ChangePage" />
            		</form>
            	</body>
            </HTML>
             ]]>
             </code>
             <p>该示例所用的Sql Server存储过程代码如下：</p>
             <code>
             <![CDATA[
            CREATE procedure GetNews
             	(@pagesize int,
            		@pageindex int,
            		@docount bit)
            		as
            		set nocount on
            		if(@docount=1)
            		select count(id) from news
            		else
            		begin
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.source,O.title,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		end
            		set nocount off
            GO
             ]]>
             </code>
            </example>
        </member>
        <member name="T:Client.Web.PageChangedEventHandler">
            <summary>
            表示处理 <see cref="E:Client.Web.AspNetPager.PageChanged"/> 事件的方法。
            </summary>
        </member>
        <member name="T:Client.Web.PageChangedEventArgs">
            <summary>
            为 <see cref="T:Client.Web.AspNetPager"/> 控件的 <see cref="E:Client.Web.AspNetPager.PageChanged"/> 事件提供数据。无法继承此类。
            </summary>
            <remarks>
            当 <see cref="T:Client.Web.AspNetPager"/> 控件的页导航元素之一被单击或用户输入页索引提交时引发 <see cref="E:Client.Web.AspNetPager.PageChanged"/> 事件。
            <p>有关 PageChangedEventArgs 实例的初始属性值列表，请参阅 PageChangedEventArgs 构造函数。</p>
            </remarks>
        </member>
        <member name="M:Client.Web.PageChangedEventArgs.#ctor(System.Int32)">
            <summary>
            使用新页面索引初始化 PageChangedEventArgs 类的新实例。
            </summary>
            <param name="newPageIndex">用户从 <see cref="T:Client.Web.AspNetPager"/> 控件的页选择元素选定的或在页索引文本框中手工输入的页的索引。</param>
        </member>
        <member name="P:Client.Web.PageChangedEventArgs.NewPageIndex">
             <summary>
             获取用户在 <see cref="T:Client.Web.AspNetPager"/> 控件的页选择元素中选定的或在页索引文本框中手工输入的页的索引。
             </summary>
            <value>用户在 <see cref="T:Client.Web.AspNetPager"/> 控件的页选择元素中选定的或在页索引文本框中输入的页的索引。
            </value>
            <remarks>
            使用 NewPageIndex 属性确定用户在 <see cref="T:Client.Web.AspNetPager"/> 控件的页选择元素中选定的或在页索引文本框中输入的页的索引。
            该值常用于设置要显示选定页的 AspNetPager 控件的 <see cref="P:Client.Web.AspNetPager.CurrentPageIndex"/> 属性。
            </remarks>
            <example>
             下面的示例显示如何使用 NewPageIndex 属性确定用户在 <see cref="T:Client.Web.AspNetPager"/> 控件的页选择元素中选定的或在页索引文本框中输入的页的索引。
            该值然后用于设置要显示选定页的 AspNetPager 控件的 <see cref="P:Client.Web.AspNetPager.CurrentPageIndex"/> 属性，并对数据显示控件重新绑定数据。
             <code><![CDATA[
            <%@ Page Language="C#"%>
            <%@ Import Namespace="System.Data"%>
            <%@Import Namespace="System.Data.SqlClient"%>
            <%@Import Namespace="System.Configuration"%>
            <%@Register TagPrefix="Webdiyer" Namespace="Wuqi.Webdiyer" Assembly="aspnetpager"%>
            <HTML>
            <HEAD>
            <TITLE>Welcome to Webdiyer.com </TITLE>
              <script runat="server">
            		SqlConnection conn;
            		SqlCommand cmd;
            		void Page_Load(object src,EventArgs e)
            		{
            			conn=new SqlConnection(ConfigurationSettings.AppSettings["ConnStr"]);
            			if(!Page.IsPostBack)
            			{
            				cmd=new SqlCommand("GetNews",conn);
            				cmd.CommandType=CommandType.StoredProcedure;
            				cmd.Parameters.Add("@pageindex",1);
            				cmd.Parameters.Add("@pagesize",1);
            				cmd.Parameters.Add("@docount",true);
            				conn.Open();
            				pager.RecordCount=(int)cmd.ExecuteScalar();
            				conn.Close();
            				BindData();
            			}
            		}
            
            		void BindData()
            		{
            			cmd=new SqlCommand("GetNews",conn);
            			cmd.CommandType=CommandType.StoredProcedure;
            			cmd.Parameters.Add("@pageindex",pager.CurrentPageIndex);
            			cmd.Parameters.Add("@pagesize",pager.PageSize);
            			cmd.Parameters.Add("@docount",false);
            			conn.Open();
            			dataGrid1.DataSource=cmd.ExecuteReader();
            			dataGrid1.DataBind();
            			conn.Close();
            		}
            		void ChangePage(object src,PageChangedEventArgs e)
            		{
            			pager.CurrentPageIndex=e.NewPageIndex;
            			BindData();
            		}
              </script>
                 <meta http-equiv="Content-Language" content="zh-cn">
            		<meta http-equiv="content-type" content="text/html;charset=gb2312">
            		<META NAME="Generator" CONTENT="EditPlus">
            		<META NAME="Author" CONTENT="Webdiyer(yhaili@21cn.com)">
            	</HEAD>
            	<body>
            		<form runat="server" ID="Form1">
            			<asp:DataGrid id="dataGrid1" runat="server" />
            
            			<Webdiyer:AspNetPager id="pager" 
            			runat="server" 
            			PageSize="8" 
            			NumericButtonCount="8" 
            			ShowCustomInfoSection="before" 
            			ShowInputBox="always" 
            			CssClass="mypager" 
            			HorizontalAlign="center" 
            			OnPageChanged="ChangePage" />
            
            		</form>
            	</body>
            </HTML>
             ]]>
             </code>
             <p>下面是该示例所用的Sql Server存储过程：</p>
             <code>
             <![CDATA[
            CREATE procedure GetNews
             	(@pagesize int,
            		@pageindex int,
            		@docount bit)
            		as
            		set nocount on
            		if(@docount=1)
            		select count(id) from news
            		else
            		begin
            		declare @indextable table(id int identity(1,1),nid int)
            		declare @PageLowerBound int
            		declare @PageUpperBound int
            		set @PageLowerBound=(@pageindex-1)*@pagesize
            		set @PageUpperBound=@PageLowerBound+@pagesize
            		set rowcount @PageUpperBound
            		insert into @indextable(nid) select id from news order by addtime desc
            		select O.id,O.source,O.title,O.addtime from news O,@indextable t where O.id=t.nid
            		and t.id>@PageLowerBound and t.id<=@PageUpperBound order by t.id
            		end
            		set nocount off
            GO
             ]]>
             </code>
            </example>
        </member>
        <member name="T:Client.Web.ShowInputBox">
            <summary>
            指定页索引输入文本框的显示方式，以便用户可以手工输入页索引。
            </summary>
        </member>
        <member name="F:Client.Web.ShowInputBox.Never">
            <summary>
            从不显示页索引输入文本框。
            </summary>
        </member>
        <member name="F:Client.Web.ShowInputBox.Auto">
            <summary>
            自动，选择此项后可以用 <see cref="P:Client.Web.AspNetPager.ShowBoxThreshold"/> 可控制当总页数达到多少时自动显示页索引输入文本框。
            </summary>
        </member>
        <member name="F:Client.Web.ShowInputBox.Always">
            <summary>
            总是显示页索引输入文本框。
            </summary>
        </member>
        <member name="T:Client.Web.ShowCustomInfoSection">
            <summary>
            指定当前页索引和总页数信息的显示方式。
            </summary>
        </member>
        <member name="F:Client.Web.ShowCustomInfoSection.Never">
            <summary>
            不显示。
            </summary>
        </member>
        <member name="F:Client.Web.ShowCustomInfoSection.Left">
            <summary>
            显示在页导航元素之前。
            </summary>
        </member>
        <member name="F:Client.Web.ShowCustomInfoSection.Right">
            <summary>
            显示在页导航元素之后。
            </summary>
        </member>
        <member name="F:Client.Web.ShowCustomInfoSection.Middle">
            <summary>
            显示页码的中间
            </summary>
        </member>
        <member name="T:Client.Web.PagingButtonType">
            <summary>
            指定页导航按钮的类型。
            </summary>
        </member>
        <member name="F:Client.Web.PagingButtonType.Text">
            <summary>
            使用文字按钮。
            </summary>
        </member>
        <member name="F:Client.Web.PagingButtonType.Image">
            <summary>
            使用图片按钮。
            </summary>
        </member>
        <member name="T:Client.Web.PagerDesigner">
            <summary>
            <see cref="T:Client.Web.AspNetPager"/> 服务器控件设计器。
            </summary>
        </member>
        <member name="M:Client.Web.PagerDesigner.#ctor">
            <summary>
            初始化 PagerDesigner 的新实例。
            </summary>
        </member>
        <member name="M:Client.Web.PagerDesigner.GetDesignTimeHtml">
            <summary>
            获取用于在设计时表示关联控件的 HTML。
            </summary>
            <returns>用于在设计时表示控件的 HTML。</returns>
        </member>
        <member name="M:Client.Web.PagerDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            获取在呈现控件时遇到错误后在设计时为指定的异常显示的 HTML。
            </summary>
            <param name="e">要为其显示错误信息的异常。</param>
            <returns>设计时为指定的异常显示的 HTML。</returns>
        </member>
        <member name="T:Client.Web.UserLinkManager">
            <summary>
            用户关联管理
            -----------------------
            创建:谢月甲,20080507
            </summary>
        </member>
        <member name="T:Client.Web.GroupOnline">
            <summary>
            分组在线统计
            --------------------
            全局可以分为一个组
            或者某一个页面可以分为一个组
            或者某一个圈子可能分为一个组
            或者某一个区域为一个组
            </summary>
        </member>
        <member name="M:Client.Web.GroupOnline.GroupMax(System.String,System.Int32)">
            <summary>
            某个圈子最大人数
            </summary>
            <param name="userNum"></param>
        </member>
        <member name="M:Client.Web.GroupOnline.Add(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            添加一个在线人员
            </summary>
        </member>
        <member name="M:Client.Web.GroupOnline.Remove(System.String,System.Int32)">
            <summary>
            从某一个组里移除一个在线人员
            </summary>
            <param name="groupKey">组关键字</param>
            <param name="userID">用户ID</param>
        </member>
        <member name="M:Client.Web.GroupOnline.Remove(System.Int32)">
            <summary>
            在所有组里移除一个在线人员
            </summary>
            <param name="userID">用户ID</param>
        </member>
        <member name="M:Client.Web.GroupOnline.GetOnlineList(System.String)">
            <summary>
            获取在线人员列表
            </summary>
            <param name="groupKey">组关键字</param>
        </member>
        <member name="M:Client.Web.GroupOnline.GetOnlineList(System.String,System.Int32)">
            <summary>
            获取在线人员列表
            </summary>
            <param name="groupKey">组关键字</param>
            <param name="topNum">前几位</param>
        </member>
        <member name="M:Client.Web.GroupOnline.GetOnlineCount(System.String)">
            <summary>
            获取某一个组的在线人数
            </summary>
            <param name="groupKey">组关键字</param>
        </member>
        <member name="T:Client.Web.GroupManager">
            <summary>
            在线人员分组管理
            </summary>
        </member>
        <member name="T:Client.Web.Head">
            <summary>
            The head control replaces the standard head element in a CS document. 
            
            This controls is a "late rendered" control. It's data/content is stored in the HttpContext and 
            can be written to from any page/control prior to the Render method being executed.
            
            It currently provides a standard way to add a Title, MetaTags, CSS Style Sheets, and Syndication
            Autodiscovery
            
            Prior to rendering it's closing bracket, it will also render any child controls.
            </summary>
        </member>
        <member name="M:Client.Web.Head.RenderFavicon(System.Web.UI.HtmlTextWriter)">
            <summary>
            重写网站标识图
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Client.Web.Head.AddMetaDescription(System.String,System.Web.HttpContext)">
            <summary>
            Adds the description meta tag.
            </summary>
        </member>
        <member name="M:Client.Web.Head.AddMetaKeywords(System.String,System.Web.HttpContext)">
            <summary>
            Adds the keywork meta tag
            </summary>
        </member>
        <member name="M:Client.Web.Head.AddMetaTag(System.String,System.String,System.Web.HttpContext)">
            <summary>
            Adds a new meta tag key and value
            </summary>
        </member>
        <member name="M:Client.Web.Head.AddStyle(System.String,System.String,System.Web.HttpContext)">
            <summary>
            Adds a style to a Queue collection. Style items are always rendered first in first out
            Although some some control can be offered using StyleRelativePosition
            </summary>
            <param name="url">Fully qualified url to style sheet</param>
            <param name="media"></param>
            <param name="context"></param>
        </member>
        <member name="M:Client.Web.Head.AddRssAutoDiscovery(System.String,System.String,System.Web.HttpContext)">
            <summary>
            Adds a RSS 2.0 autodiscoverable link to the header
            </summary>
        </member>
        <member name="M:Client.Web.Head.AddAtomDiscovery(System.String,System.String,System.Web.HttpContext)">
            <summary>
            Adds an Atom 1.0 autodiscoverale link to the header
            </summary>
        </member>
        <member name="M:Client.Web.Head.AddLinkTag(System.String,System.String,System.Web.HttpContext)">
            <summary>
            Adds a new link tag rel and href
            </summary>
        </member>
        <member name="M:Client.Web.Head.AddRawContent(System.String,System.Web.HttpContext)">
            <summary>
            Adds raw content to the HTML Header, such as script blocks or custom tags
            </summary>
        </member>
        <member name="T:Client.Web.CookieHelper">
            <summary>
            Cookie操作
            </summary>
        </member>
        <member name="M:Client.Web.CookieHelper.WriteCookie(System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Client.Web.CookieHelper.WriteCookie(System.String,System.String,System.Int32)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Client.Web.CookieHelper.WriteCookie(System.String,System.String,System.DateTime)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
            <param name="expires">过期时间或日期</param>
        </member>
        <member name="M:Client.Web.CookieHelper.GetCookie(System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:Client.Web.CookieHelper.GetCookie(System.String,System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="name"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.CookieHelper.GetCookieDomain(System.String)">
            <summary>
            读cookie值的域
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.CookieHelper.GetCookieExpires(System.String)">
            <summary>
            读cookie值的超时时间
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Client.Web.CookieHelper.Domain">
            <summary>
            从URL中获得的Domain，用于Cookie，去除二级子域
            </summary>
        </member>
        <member name="T:Client.Web.JSHelper">
            <summary>
            JSHelper
            </summary>
        </member>
        <member name="F:Client.Web.JSHelper.ALERT">
            <summary>
            ALERT
            </summary>
        </member>
        <member name="F:Client.Web.JSHelper.REDIRECT">
            <summary>
            REDIRECT
            </summary>
        </member>
        <member name="F:Client.Web.JSHelper.REFRESH">
            <summary>
            REFRESH
            </summary>
        </member>
        <member name="M:Client.Web.JSHelper.Alert(System.String)">
            <summary>
            ALERT
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Client.Web.JSHelper.Alert(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="message"></param>
        </member>
        <member name="M:Client.Web.JSHelper.Redirect(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Client.Web.JSHelper.Redirect(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="url"></param>
        </member>
        <member name="M:Client.Web.JSHelper.AlertAndRedirect(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="url"></param>
        </member>
        <member name="M:Client.Web.JSHelper.GenerateRandomString(System.Int32,System.Boolean)">
            <summary>
            随机生成数字或字母字符串
            </summary>
            <param name="length">字符串长度</param>
            <param name="numberOnly">生成数字串</param>
            <returns>生成的随机字符串</returns>
        </member>
        <member name="T:Client.Components.SFWException">
            <summary>
            前台页面错误导致的异常
            </summary>
        </member>
        <member name="M:Client.Components.SFWException.#ctor(Framework.Components.ExceptionType)">
            <summary>
            构造函数
            </summary>
            <param name="t">异常类型</param>
        </member>
        <member name="M:Client.Components.SFWException.#ctor(Framework.Components.ExceptionType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="t">异常类型</param>
            <param name="msg">异常消息</param>
        </member>
        <member name="M:Client.Components.SFWException.#ctor(Framework.Components.ExceptionType,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="t">异常类型</param>
            <param name="msg">异常消息</param>
            <param name="errInfo">显示给用户看的友好的错误信息</param>
        </member>
        <member name="M:Client.Components.SFWException.#ctor(Framework.Components.ExceptionType,System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="t">异常类型</param>
            <param name="msg">异常消息</param>
            <param name="inner">内部异常</param>
        </member>
        <member name="M:Client.Components.SFWException.#ctor(Framework.Components.ExceptionType,System.String,System.Exception,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="t">异常类型</param>
            <param name="msg">异常消息</param>
            <param name="inner">内部异常</param>
            <param name="errInfo">显示给用户看的友好的错误信息</param>
        </member>
        <member name="M:Client.Components.SFWException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">存储对象序列化和反序列化所需的全部数据</param>
            <param name="context">描述给定的序列化流的源和目标，并提供一个由调用方定义的附加上下文</param>
        </member>
        <member name="M:Client.Components.SFWException.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Components.SFWException.GetHashCode(System.Int32)">
            <summary>
            ＧｅｔＨａｓｈＣｏｄｅ
            </summary>
            <param name="settingsID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.SFWException.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="P:Client.Components.SFWException.Message">
            <summary>
            错误消息
            </summary>
        </member>
        <member name="T:Client.Web.Controls.RepeaterWithEmpty">
            <summary>
            有空模板的Repeater控件
            </summary>
        </member>
        <member name="P:Client.Web.Controls.RepeaterWithEmpty.EmptyDataTemplate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Client.Web.UrlHelper.Encode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:Client.Web.UrlHelper.Decode(System.String)">
            <summary>
            返回 URL 字符串的编码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="M:Client.Web.UrlHelper.Combine(System.String,System.String)">
            <summary>
            Url地址合并
            </summary>
            <param name="baseUrl">主路径</param>
            <param name="relativePath">相对路径</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.UrlHelper.UrlEncodeToCapital(System.String)">
            <summary>
            
            </summary>
            <param name="bstr"></param>
            <returns></returns>
        </member>
        <member name="T:Client.Web.WebContext">
            <summary>
            上下文组件
            </summary>
        </member>
        <member name="M:Client.Web.WebContext.#ctor(Framework.Components.UserShortInfo,System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <param name="hc"></param>
        </member>
        <member name="M:Client.Web.WebContext.Instance(System.Web.HttpContext)">
            <summary>
            实例化一个用户HttpContext扩展类
            </summary>
            <param name="hc">默认HttpContext</param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.Instance(Framework.Components.UserShortInfo,System.Web.HttpContext)">
            <summary>
            实例化一个已知用户的HttpContext扩展类
            </summary>
            <param name="user"></param>
            <param name="hc"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.ResetUser">
            <summary>
            清除用户对像的信息
            </summary>
        </member>
        <member name="M:Client.Web.WebContext.Login(System.String,System.String,System.Int32)">
            <summary>
            写入用户登陆Cookie副本, Cookie保存时间 设置自动登陆
            </summary>
            <param name="user"></param>
            <param name="minutes"></param>
        </member>
        <member name="M:Client.Web.WebContext.AutoLogin(System.String,System.Int32)">
            <summary>
            自动登录
            </summary>
            <param name="uname"></param>
            <param name="expires"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.Logout">
            <summary>
            注销用户登录信息
            </summary>
        </member>
        <member name="M:Client.Web.WebContext.IsCLogin">
            <summary>
            判断用户是否已登陆
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.GetSlot">
            <summary>
            查找已经命名的数据槽
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.SaveContextToStore(Client.Web.WebContext)">
            <summary>
            为当前正在运行的线程上为此线程的当前域在槽中设置数据
            </summary>
            <param name="wc"></param>
        </member>
        <member name="M:Client.Web.WebContext.Unload">
            <summary>
            为进程中所有线程消除名称与槽之间的关联
            </summary>
        </member>
        <member name="M:Client.Web.WebContext.GetIntFromParameters(System.String,System.Int32)">
            <summary>
            获得整型数据
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.GetStringFromParameters(System.String,System.String)">
            <summary>
            从参数中读取字串
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.GetDateTimeFromParameters(System.String,System.DateTime)">
            <summary>
            从参数中读取日期型数据
            </summary>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.GetIntFromQueryString(System.Web.HttpContext,System.String)">
            <summary>
            Retrieves a value from the query string and returns it as an int.
            </summary>
        </member>
        <member name="F:Client.Web.WebContext._ThemesRoot">
            <summary>
            参数中的ＩＤ
            </summary>
        </member>
        <member name="M:Client.Web.WebContext.GetSkinPath">
            <summary>
            根据系统配置，显示针对某一用户的系统公用图片（非用户上传）的根目录，可能会涉及二级域名的划分
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.GetInnerSkinPath">
            <summary>
            根据系统配置，从本站的角度显示针对某一用户的皮肤路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.ValidUserRegionRights(System.Int32,System.Int32)">
            <summary>
            验证用户的地区权限
            </summary>
            <param name="userID"></param>
            <param name="regionID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.ValidUserProvinceRights(System.Int32,System.Int32)">
            <summary>
            验证用户的地区分站权限
            </summary>
            <param name="userID"></param>
            <param name="provinceID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.CalculateUKey(System.DateTime,System.Int32)">
            <summary>
            计算用户自动登录的Key
            </summary>
            <param name="time"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.CalculateUKey(System.Int64,System.Int32)">
            <summary>
            计算用户自动登录的Key
            </summary>
            <param name="ticks"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Web.WebContext.ValidUKey(System.Int64,System.Int32,System.String,System.Int32)">
            <summary>
            验证用户的自动登录Key
            </summary>
            <param name="ticks"></param>
            <param name="userID"></param>
            <param name="key"></param>
            <param name="minutes">验证超时的时间</param>
            <returns></returns>
        </member>
        <member name="P:Client.Web.WebContext.Context">
            <summary>
            默认上下文
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.CPassPort">
            <summary>
            用户认证相关的接口对像
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.Guid">
            <summary>
            客户端实识标志,存储于Cookie中
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.IPAddress">
            <summary>
            当前IP地址
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.SettingsID">
            <summary>
            站点配置ID
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.User">
            <summary>
            当前用户实例
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.Current">
            <summary>
            获得当前用户HttpContext
            </summary>
            <returns></returns>
        </member>
        <member name="P:Client.Web.WebContext.QueryText">
            <summary>
            扩展的查询参数，指参数名为Q的值
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.ReturnUrl">
            <summary>
            返回URL的值
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.ThemesRoot">
            <summary>
            根据系统配置，显示系统公用图片（非用户上传）的根目录，可能会涉及二级域名的划分
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.ApplicationPath">
            <summary>
            
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.UserName">
            <summary>
            当前用户名
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.UserID">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.IsAdministrator">
            <summary>
            是否系统管理员
            </summary>
        </member>
        <member name="P:Client.Web.WebContext.MessageID">
            <summary>
            消息ID，有可能是异常类型
            </summary>
        </member>
        <member name="T:Client.Components.CachedUser">
            <summary>
            缓冲用户
            </summary>
        </member>
        <member name="T:Client.Components.Users">
            <summary>
            简单的用户操作信息，请要用于一些基础类库中需要查询用户信息时使用
            此类调用具体的IPassport实现类
            </summary>
        </member>
        <member name="M:Client.Components.Users.GetAnonymousUser">
            <summary>
            获得匿名用户的信息
            系统将匿名用户的信息保存在配置文件中，此时从配置文件中读取
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetAnonymousUser(System.Boolean)">
            <summary>
            获得匿名用户的信息
            系统将匿名用户的信息保存在配置文件中，此时从配置文件中读取
            </summary>
            <param name="fromCache">是否从缓存中读取</param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetAnonyousUserTrackingID(System.Web.HttpContext)">
            <summary>
            获得匿名用户的跟踪信息
            </summary>
            <param name="context">上下文</param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUserFullInfo(System.Boolean)">
            <summary>
            获得用户完整信息
            </summary>
            <param name="cache"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUserFullInfo(System.String,System.Boolean)">
            <summary>
            获得用户Full信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUser">
            <summary>
            读取当前的用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUser(System.Boolean)">
            <summary>
            读取当前用户，并刷新用户在线时间
            </summary>
            <param name="isOnline"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUser(System.Int32,System.Boolean)">
            <summary>
            读取指定ID的用户信息
            </summary>
            <param name="userID">用户ID</param>
            <param name="isOnline">是否刷新用户在线时间</param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUser(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            读取指定ID的用户信息
            </summary>
            <param name="userID">用户ID</param>
            <param name="isOnline">是否刷新用户在线时间</param>
            <param name="isCacheable">是否加入缓冲</param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUserID(System.String)">
            <summary>
            获得用户的ID
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUser(System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            获取用户信息
            </summary>
            <param name="userID"></param>
            <param name="username"></param>
            <param name="isOnline"></param>
            <param name="isCacheable"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUser(System.Int32,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            获得用户信息
            </summary>
            <param name="userID"></param>
            <param name="username"></param>
            <param name="userType"></param>
            <param name="isOnline"></param>
            <param name="isCacheable"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetLoggedOnUsername">
            <summary>
             Returns the user name without the domain, replaces forumContext.Username
            </summary>
            <returns>stripped username</returns>
            <remarks>
            Author:		PLePage
            Date:		07/09/03
            This strips the users domain from their name.  If the configuration 
            specifies a domain, it will remove it, * will remove all domains and 
            nothing will not remove any domain appendages.
            
            History:
            7/16/2004	Terry Denham	moddified the method to use the StripDomainName as
            	this needs to be handled before we actually connect to the database so that
            	the admin can configure the web.config file, hit the site and get logged in
            	and associated with the correct role. If we make it pull from the database
            </remarks>
        </member>
        <member name="M:Client.Components.Users.IsAdministrator(System.Int32)">
            <summary>
            是否系统管理员
            </summary>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.IsPortalAdministrator(System.Int32,System.Int32)">
            <summary>
            是否站点的系统管理员
            </summary>
            <param name="userID"></param>
            <param name="portalID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.IsCustomerAdministrator(System.Int32,System.Int32)">
            <summary>
            是否客户的系统管理员
            </summary>
            <param name="userID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.IsCustomerUser(System.Int32,System.Int32)">
            <summary>
            是否客户的操作员
            </summary>
            <param name="userID"></param>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.ConvertUserEntityToUser(Framework.Components.UserShortInfo)">
            <summary>
            与PassPort的用户进行转换
            </summary>
            <param name="ur"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.ConvertUserToUserEntity(Framework.Components.UserInfo)">
            <summary>
            将User转换成Passport中的UserEntity
            </summary>
            <param name="ur"></param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.GetUsersInfo(System.String,System.Int32)">
            <summary>
            获取 用户来源信息
            </summary>
            <param name="Info">Info</param>
            <param name="Type">Type</param>
            <returns>返回 用户来源信息</returns>
        </member>
        <member name="M:Client.Components.Users.GenActiveCode(System.Int32,System.String,System.Int32)">
            <summary>
            根据用户信息，生成激活码
            
            </summary>
            <param name="userID"></param>
            <param name="userName"></param>
            <param name="expire">码的失效时间，以分钟为单位。如果为○或－1，系统使用默认值：30天</param>
            <returns></returns>
        </member>
        <member name="M:Client.Components.Users.ValidActiveCode(System.String)">
            <summary>
            验证用户激活码，并确定是否失效
            </summary>
            <param name="key"></param>
            <returns>-1 无码，－3错误码 －2错误码 －4 过期码 0 原码中用户ID有误 大于0，正确，为用户ID</returns>
        </member>
        <member name="M:Client.Components.Users.GetUserPassword(System.Int32,System.String,Framework.Securities.EncryptMode,System.String)">
            <summary>
            解密用户密码，有可能有些加密方法无法解密
            </summary>
            <param name="userID"></param>
            <param name="passwordHash"></param>
            <param name="passwordFormat"></param>
            <param name="passwordSalt"></param>
            <returns></returns>
        </member>
    </members>
</doc>
